{"version":3,"sources":["../../../src/com_ws/CommandHandler.js"],"names":["config","require","CommandHandler","constructor","agentCom","augManager","on","initialAugs","_handleInitialAugs","command","_handleAddAug","_handleRemoveAug","updateConfig","getSdkConfigurationMap","err","logger","exception","augs","aug","getAugsList","augConfig","JSON","parse","push","initializeAugs","addAug","getAugJson","removeAug","getAugId"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEe,MAAMC,cAAN,CAAqB;AAChCC,EAAAA,WAAW,CAACC,QAAD,EAAWC,UAAX,EAAuB;AAC9B,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AAEA,SAAKD,QAAL,CAAcE,EAAd,CAAiB,oBAAjB,EAAwCC,WAAD,IAAiB,KAAKC,kBAAL,CAAwBD,WAAxB,CAAxD;AACA,SAAKH,QAAL,CAAcE,EAAd,CAAiB,eAAjB,EAAmCG,OAAD,IAAa,KAAKC,aAAL,CAAmBD,OAAnB,CAA/C;AACA,SAAKL,QAAL,CAAcE,EAAd,CAAiB,kBAAjB,EAAsCG,OAAD,IAAa,KAAKE,gBAAL,CAAsBF,OAAtB,CAAlD;AACH;;AAEDD,EAAAA,kBAAkB,CAACD,WAAD,EAAc;AAC5B,QAAI;AACAP,MAAAA,MAAM,CAACY,YAAP,CAAoBL,WAAW,CAACM,sBAAZ,EAApB,EAA0Db,MAA1D;AACH,KAFD,CAEE,OAAOc,GAAP,EAAY;AACVC,qBAAOC,SAAP,CAAiB,gCAAjB,EAAmDF,GAAnD;AACH;;AAED,QAAIG,IAAI,GAAG,EAAX;;AAEA,SAAK,MAAMC,GAAX,IAAkBX,WAAW,CAACY,WAAZ,EAAlB,EAA6C;AACzC,UAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAhB;AACAD,MAAAA,IAAI,CAACM,IAAL,CAAUH,SAAV;AACH;;AAED,SAAKf,UAAL,CAAgBmB,cAAhB,CAA+BP,IAA/B;AACH;;AAEDP,EAAAA,aAAa,CAACD,OAAD,EAAU;AACnB,SAAKJ,UAAL,CAAgBoB,MAAhB,CAAuBJ,IAAI,CAACC,KAAL,CAAWb,OAAO,CAACiB,UAAR,EAAX,CAAvB;AACH;;AAEDf,EAAAA,gBAAgB,CAACF,OAAD,EAAU;AACtB,SAAKJ,UAAL,CAAgBsB,SAAhB,CAA0BlB,OAAO,CAACmB,QAAR,EAA1B;AACH;;AAjC+B","sourcesContent":["import {logger} from \"../logger\";\n\nconst config = require(\"../config\");\n\nexport default class CommandHandler {\n    constructor(agentCom, augManager) {\n        this.agentCom = agentCom;\n        this.augManager = augManager;\n\n        this.agentCom.on(\"InitialAugsCommand\", (initialAugs) => this._handleInitialAugs(initialAugs));\n        this.agentCom.on(\"AddAugCommand\", (command) => this._handleAddAug(command));\n        this.agentCom.on(\"RemoveAugCommand\", (command) => this._handleRemoveAug(command));\n    }\n\n    _handleInitialAugs(initialAugs) {\n        try {\n            config.updateConfig(initialAugs.getSdkConfigurationMap(), config);\n        } catch (err) {\n            logger.exception(\"Failed to update configuration\", err);\n        }\n\n        let augs = [];\n\n        for (const aug of initialAugs.getAugsList()) {\n            let augConfig = JSON.parse(aug);\n            augs.push(augConfig)\n        }\n\n        this.augManager.initializeAugs(augs);\n    }\n\n    _handleAddAug(command) {\n        this.augManager.addAug(JSON.parse(command.getAugJson()));\n    }\n\n    _handleRemoveAug(command) {\n        this.augManager.removeAug(command.getAugId());\n    }\n}"],"file":"CommandHandler.js"}