{"version":3,"sources":["../../../src/com_ws/information.js"],"names":["agent_info_pb","require","os","ip","path","getos","config","fs","k8sNamespaceFileName_default","k8sNamespaceFileName","Information","constructor","TypeError","_collectors","_getCollectors","collect","debug","output","key","Object","keys","value","Function","SCMInformation","_get_commit","bind","_get_origin","_get_sources","GitConfiguration","SOURCES","userCommit","GIT_COMMIT","process","env","ROOKOUT_COMMIT","gitRoot","_get_git_root","git","getRevision","e","logger","exception","ROOKOUT_GIT","findRoot","dirname","resolve","main","filename","userRemoteOrigin","GIT_ORIGIN","ROOKOUT_REMOTE_ORIGIN","getRemoteOrigin","PlatformInformation","version","NetworkInformation","address","hostname","SystemInformation","platform","release","_getDistro","arch","distro","os_info","dist","codename","VersionInformation","ClusterInformation","existsSync","err","stat","lstatSync","isDirectory","warn","data","readFileSync","AgentInformation","mainModule","undefined","basename","argv","pid","agentInfoPromise","k8sNamespaceFileNameOverride","cleanupAgentInfoPromise","pack_agent_info","info","packed_info","setAgentId","agent_id","version_info","setVersion","setCommit","commit","network_info","setIpAddr","network","ip_addr","setNetwork","system_info","setHostname","system","setOs","setOsVersion","os_version","setDistro","setArch","setSystem","platform_info","setPlatform","scm_info","scm","setOrigin","origin","sourceInfo","SourceInfo","setRemoteoriginurl","addSources","sources","forEach","setScm","setExecutable","executable","setCommandArgumentsList","command_arguments","setProcessId","process_id","labels_map","getLabelsMap","cluster","k8s_namespace","hasOwnProperty","labels","set","setTagsList","tags"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport { logger } from '../logger';\n\nimport git from \"../git\";\n\nconst agent_info_pb = require(\"../protobuf/agent_info_pb\");\nconst os = require(\"os\");\nconst ip = require(\"ip\");\nconst path = require(\"path\");\nconst getos = require(\"getos\");\nconst config = require('../config');\nconst fs = require('fs');\n\n// Kubernetes namespace related variables\nconst k8sNamespaceFileName_default = '/var/run/secrets/kubernetes.io/serviceaccount/namespace';\nvar k8sNamespaceFileName = k8sNamespaceFileName_default;\n\nclass Information {\n\n\n    constructor() {\n        if (this.constructor === Information) {\n            throw new TypeError(\"Abstract class \\\"Information\\\" cannot be instantiated directly.\");\n        }\n\n        this._collectors = this._getCollectors();\n    }\n\n    // Override this method without calling super.\n    /* abstract */ _getCollectors() {\n        throw new TypeError(\"Inheriting classes must implement _getCollectors\");\n    }\n\n    // k8sNamespaceFileNameOverride - override the default read location of the Kubernetes \n    // namespaceinformation. Use for debugging.\n    async collect(debug) {\n        let output = {};\n        for (let key of Object.keys(this._collectors)) {\n            let value = this._collectors[key];\n            if (value instanceof Function) {\n                value = value();\n            }\n            output[key] = await value;\n        }\n        output.debug = debug;\n        return output;\n    }\n}\n\nclass SCMInformation extends Information {\n    _getCollectors() {\n        return {\n            \"commit\": this._get_commit.bind(this),\n            \"origin\": this._get_origin.bind(this),\n            \"sources\": this._get_sources.bind(this),\n        }\n    }\n\n    _get_sources() {\n        return config.GitConfiguration.SOURCES || {};\n    }\n\n    _get_commit() {\n        let userCommit = config.GitConfiguration.GIT_COMMIT || process.env.ROOKOUT_COMMIT || \"\";\n\n        if (userCommit === \"\") {\n            try {\n                let gitRoot = this._get_git_root();\n\n                if (gitRoot !== \"\") {\n                    if (userCommit === \"\") {\n                        userCommit = git.getRevision(gitRoot);\n                    }\n\n                    return userCommit;\n                }\n            } catch (e) {\n                logger.exception(\"Failed to get git commit\");\n            }\n\n            return \"\";\n        }\n\n        return userCommit;\n    }\n\n    _get_git_root() {\n        let gitRoot = process.env.ROOKOUT_GIT || \"\";\n        if (gitRoot === \"\") {\n            gitRoot = git.findRoot(path.dirname(path.resolve(require.main.filename)));\n        }\n\n        return gitRoot;\n    }\n\n    _get_origin() {\n        let userRemoteOrigin = config.GitConfiguration.GIT_ORIGIN || process.env.ROOKOUT_REMOTE_ORIGIN || \"\";\n\n        if (userRemoteOrigin === \"\") {\n            try {\n                let gitRoot = this._get_git_root();\n\n                if (gitRoot !== \"\") {\n                    if (userRemoteOrigin === \"\") {\n                        userRemoteOrigin = git.getRemoteOrigin(gitRoot);\n                    }\n\n                    return userRemoteOrigin;\n                }\n            } catch (e) {\n                logger.exception(\"Failed to get git remote origin\");\n            }\n\n            return \"\";\n        }\n\n        return userRemoteOrigin;\n    }\n}\n\nclass PlatformInformation extends Information {\n    _getCollectors() {\n        return {\n            \"platform\": \"node\",\n            \"version\": process.version\n        }\n    }\n}\n\nclass NetworkInformation extends Information {\n    _getCollectors() {\n        return {\n            \"ip_addr\": ip.address,\n            \"network\": os.hostname\n        }\n    }\n}\n\nclass SystemInformation extends Information {\n    _getCollectors() {\n        return {\n            \"hostname\": os.hostname,\n            \"os\": os.platform,\n            \"os_version\": os.release,\n            \"distro\": this._getDistro,\n            \"arch\": os.arch\n        }\n    }\n\n    async _getDistro() {\n        if (os.platform() !== \"linux\") {\n            return \"<NA>\";\n        }\n\n        let distro = null;\n\n        getos((e, os_info) => {\n            if (e) {\n                throw e;\n            }\n            distro = os_info.dist + \" \" + os_info.codename + \" \" + os_info.release;\n            return distro;\n        });\n    }\n}\n\nclass VersionInformation extends Information {\n    _getCollectors() {\n        return {\n            \"version\": AgentVersionInfo.Version,\n            \"commit\": AgentVersionInfo.Commit\n        }\n    }\n}\n\nclass ClusterInformation extends Information {\n    _getCollectors() {\n\n        // Check if the file exists, may also be a directory\n        try {\n            if (!fs.existsSync(k8sNamespaceFileName)) {\n                return { \"k8s_namespace\": \"\" }\n            }\n        } catch (err) {\n            return { \"k8s_namespace\": \"\" }\n        }\n\n        // If the file exists, verify it's not a directory\n        try {\n            var stat = fs.lstatSync(k8sNamespaceFileName);\n\n            if (stat.isDirectory()) {\n                logger.warn(\"Failed to read Kubernetes namespace information, \" +\n                    \"check that '/var/run/secrets/kubernetes.io/serviceaccount/namespace' is not a directory\");\n                return { \"k8s_namespace\": \"\" }\n            }\n        } catch (err) {\n            logger.warn(\"Failed to read Kubernetes namespace information, \" +\n                \"check that '/var/run/secrets/kubernetes.io/serviceaccount/namespace' status works\");\n            return { \"k8s_namespace\": \"\" }\n        }\n        // Read the k8s namespace from the file\n        try {\n            const data = fs.readFileSync(k8sNamespaceFileName, 'ascii');\n            return { \"k8s_namespace\": data }\n        } catch (err) {\n            logger.warn(\"Failed to read Kubernetes namespace information, \" +\n                \"check that '/var/run/secrets/kubernetes.io/serviceaccount/namespace' is not corrupted\");\n        }\n        return { \"k8s_namespace\": \"\" };\n    }\n}\n\nclass AgentInformation extends Information {\n    _getCollectors() {\n        return {\n            \"version\": () => new VersionInformation().collect(),\n            \"network\": () => new NetworkInformation().collect(),\n            \"system\": () => new SystemInformation().collect(),\n            \"platform\": () => new PlatformInformation().collect(),\n            \"scm\": () => new SCMInformation().collect(),\n            \"executable\": () => {\n                if (process.mainModule !== undefined && process.mainModule.filename !== undefined) {\n                    return path.basename(process.mainModule.filename);\n                } else {\n                    return path.basename(process.argv[0]);\n                }\n            },\n            \"command_arguments\": process.argv,\n            \"process_id\": process.pid,\n            \"cluster\": () => new ClusterInformation().collect()\n        }\n    }\n}\n\nlet agentInfoPromise = null;\nexport async function collect(debug, k8sNamespaceFileNameOverride = k8sNamespaceFileName_default) {\n    if (!agentInfoPromise) {\n        k8sNamespaceFileName = k8sNamespaceFileNameOverride;\n        agentInfoPromise = new AgentInformation().collect(debug);\n    }\n    return agentInfoPromise;\n}\n\nexport function cleanupAgentInfoPromise() {\n    if (agentInfoPromise) {\n        agentInfoPromise = null;\n    }\n}\n\nexport function pack_agent_info(info) {\n    let packed_info = new agent_info_pb.AgentInformation();\n    packed_info.setAgentId(info.agent_id);\n\n    let version_info = new agent_info_pb.VersionInformation();\n    version_info.setVersion(info.version.version);\n    version_info.setCommit(info.version.commit);\n    packed_info.setVersion(version_info);\n\n    let network_info = new agent_info_pb.NetworkInformation();\n    network_info.setIpAddr(info.network.ip_addr);\n    network_info.setNetwork(info.network.network);\n    packed_info.setNetwork(network_info);\n\n    let system_info = new agent_info_pb.SystemInformation();\n    system_info.setHostname(info.system.hostname);\n    system_info.setOs(info.system.os);\n    system_info.setOsVersion(info.system.os_version);\n    system_info.setDistro(info.system.distro);\n    system_info.setArch(info.system.arch);\n    packed_info.setSystem(system_info);\n\n    let platform_info = new agent_info_pb.PlatformInformation();\n    platform_info.setPlatform(info.platform.platform);\n    platform_info.setVersion(info.platform.version);\n    packed_info.setPlatform(platform_info);\n\n    let scm_info = new agent_info_pb.SCMInformation();\n    scm_info.setCommit(info.scm.commit);\n    scm_info.setOrigin(info.scm.origin);\n    if (info.scm.origin && info.scm.commit) {\n        let sourceInfo = new agent_info_pb.SCMInformation.SourceInfo();\n        sourceInfo.setRemoteoriginurl(info.scm.origin);\n        sourceInfo.setCommit(info.scm.commit);\n        scm_info.addSources(sourceInfo);\n    }\n    Object.keys(info.scm.sources).forEach((origin) => {\n        let sourceInfo = new agent_info_pb.SCMInformation.SourceInfo()\n        sourceInfo.setRemoteoriginurl(origin);\n        sourceInfo.setCommit(info.scm.sources[origin]);\n        scm_info.addSources(sourceInfo);\n    });\n\n    packed_info.setScm(scm_info);\n\n    packed_info.setExecutable(info.executable);\n    packed_info.setCommandArgumentsList(info.command_arguments);\n    packed_info.setProcessId(info.process_id);\n\n    let labels_map = packed_info.getLabelsMap();\n\n    // Add Kubernetes label\n    if (info.cluster.k8s_namespace != \"\") {\n        if (! info.hasOwnProperty('labels')) {\n            info.labels = { k8s_namespace: info.cluster.k8s_namespace };\n        } else if (info.labels[\"k8s_namespace\"] === undefined) {\n            info.labels.k8s_namespace = info.cluster.k8s_namespace;\n        }\n    }\n    \n    if (info.hasOwnProperty('labels')) {\n        Object.keys(info.labels).forEach((key) => {\n            labels_map.set(key, info.labels[key]);\n        });\n    }\n\n    if (info.debug) {\n        labels_map.set(\"rookout_debug\", \"on\");\n    }\n\n    packed_info.setTagsList(info.tags);\n\n    return packed_info;\n}\n"],"file":"information.js"}