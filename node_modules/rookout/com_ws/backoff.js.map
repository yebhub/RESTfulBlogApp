{"version":3,"sources":["../../../src/com_ws/backoff.js"],"names":["config","require","Backoff","constructor","_connectTime","_resetBackoff","afterDisconnect","Date","now","AgentComConfiguration","RESET_BACKOFF_TIMEOUT","logger","debug","_nextBackoff","_timeout","Math","min","MAX_SLEEP","afterConnect","ms","Promise","resolve","setTimeout","unref","BACK_OFF"],"mappings":"AAAA;;;;;;;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEe,MAAMC,OAAN,CAAc;AAEzBC,EAAAA,WAAW,GAAG;AACV,SAAKC,YAAL,GAAoB,IAApB;;AACA,SAAKC,aAAL;AACH;;AAEoB,QAAfC,eAAe,GAAG;AACpB,QAAK,KAAKF,YAAL,KAAsB,IAAvB,IACIG,IAAI,CAACC,GAAL,KAAa,KAAKJ,YAAL,GAAoBJ,MAAM,CAACS,qBAAP,CAA6BC,qBADtE,EAC8F;AAC1F,WAAKL,aAAL;AACH;;AAED,SAAKD,YAAL,GAAoB,IAApB;;AAEAO,mBAAOC,KAAP,CAAc,eAAc,KAAKC,YAAa,UAA9C;;AACA,UAAM,KAAKC,QAAL,CAAc,KAAKD,YAAnB,CAAN;AACA,SAAKA,YAAL,GAAoBE,IAAI,CAACC,GAAL,CAAS,KAAKH,YAAL,GAAoB,CAA7B,EAAgCb,MAAM,CAACS,qBAAP,CAA6BQ,SAA7D,CAApB;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,SAAKd,YAAL,GAAoBG,IAAI,CAACC,GAAL,EAApB;AACH;;AAEDM,EAAAA,QAAQ,CAACK,EAAD,EAAK;AACT,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAE,GAAG,IAAf,CAAV,CAA+BI,KAA/B,EAAvB,CAAP;AACH;;AAEDlB,EAAAA,aAAa,GAAG;AACZ,SAAKQ,YAAL,GAAoBb,MAAM,CAACS,qBAAP,CAA6Be,QAAjD;AACH;;AA9BwB","sourcesContent":["\"use strict\";\r\n\r\nimport {logger} from '../logger';\r\n\r\nconst config = require(\"../config\");\r\n\r\nexport default class Backoff {\r\n\r\n    constructor() {\r\n        this._connectTime = null;\r\n        this._resetBackoff()\r\n    }\r\n\r\n    async afterDisconnect() {\r\n        if ((this._connectTime !== null)\r\n            && (Date.now() > this._connectTime + config.AgentComConfiguration.RESET_BACKOFF_TIMEOUT)) {\r\n            this._resetBackoff();\r\n        }\r\n\r\n        this._connectTime = null;\r\n\r\n        logger.debug(`Backing off ${this._nextBackoff} seconds`);\r\n        await this._timeout(this._nextBackoff);\r\n        this._nextBackoff = Math.min(this._nextBackoff * 2, config.AgentComConfiguration.MAX_SLEEP);\r\n    }\r\n\r\n    afterConnect() {\r\n        this._connectTime = Date.now();\r\n    }\r\n\r\n    _timeout(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms * 1000).unref());\r\n    }\r\n\r\n    _resetBackoff() {\r\n        this._nextBackoff = config.AgentComConfiguration.BACK_OFF;\r\n    }\r\n}\r\n"],"file":"backoff.js"}