{"version":3,"sources":["../../src/config.js"],"names":["trueValues","Config","constructor","loadDefaults","LoggingConfiguration","LOGGER_NAME","FILE_NAME","LOG_TO_STDERR","LOG_LEVEL","PROPAGATE_LOGS","DEBUG","VersionConfiguration","VERSION","COMMIT","ControllerAddress","HOST","PORT","AgentComConfiguration","BACK_OFF","MAX_SLEEP","MAX_MESSAGE_LENGTH","TIMEOUT","REQUEST_TIMEOUT_SECS","CONNECT_TIMEOUT","PING_TIMEOUT","PING_INTERVAL","RESET_BACKOFF_TIMEOUT","MAX_QUEUED_MESSAGES","MAX_QUEUED_MESSAGES_SIZE","WAIT_MESSAGE_CHECK_INTERVAL","SEND_RESOLVE_TIMEOUT","OutputWsConfiguration","BUCKET_REFRESH_RATE","MAX_AUG_MESSAGES","MAX_LOG_ITEMS","MAX_STATUS_UPDATES","InstrumentationConfig","MIN_TIME_BETWEEN_HITS_MS","MAX_AUG_TIME_MS","AUG_RATE_LIMITER_MINIMUM_DURATION_TIME_NS","MAX_SCRIPTS_COUNT_FAIL_SAFE","MAX_SCRIPTS_SIZE_FAIL_SAFE","CLEANUP_ASYNC_CALLSTACK_INTERVAL_MILLISECONDS","GitConfiguration","GIT_COMMIT","GIT_ORIGIN","SOURCES","MonitorConfiguration","ENABLED","CPU_CHECK_GAP","HeapSnapshotConfiguration","SIGNAL","HEAP_PATH","MemoryUsageLogService","LOG_FILE","TRACE_GC_ENABLED","INTERVAL_SECONDS","LogHandlerService","CONSOLE_FUNCTIONS_HOOK_ENABLED","DebuggerService","WAIT_SECONDS_TO_CLOSE_DEBUGGER_AFTER_NO_AUGS","DumpConfig","STRING_CACHE_USERMESSAGE","updateConfig","newConfig","configObject","forEach","v","k","indexOf","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst trueValues = ['y', 'Y', 'yes',  'Yes',  'YES', 'true', 'True', 'TRUE', '1', true];\n\nclass Config {\n    constructor() {\n        this.loadDefaults();\n    }\n\n    loadDefaults() {\n        this.LoggingConfiguration = {\n            LOGGER_NAME: \"rook\",\n            FILE_NAME: \"rookout/node-rook.log\",\n            LOG_TO_STDERR: false,\n            LOG_LEVEL: \"INFO\",\n            PROPAGATE_LOGS: false,\n            DEBUG: false\n        };\n\n        this.VersionConfiguration = {\n            VERSION: AgentVersionInfo.Version,\n            COMMIT: AgentVersionInfo.Commit\n        };\n\n        this.ControllerAddress = {\n            HOST: \"wss://control.rookout.com\",\n            PORT: 443\n        };\n\n        this.AgentComConfiguration = {\n            BACK_OFF: 0.3,\n            MAX_SLEEP: 60,\n            MAX_MESSAGE_LENGTH: 1024 * 1024,\n            TIMEOUT: 3,\n            REQUEST_TIMEOUT_SECS: 30,\n            CONNECT_TIMEOUT: 3,\n            PING_TIMEOUT: 30,\n            PING_INTERVAL: 10,\n            RESET_BACKOFF_TIMEOUT: 3*60,\n            MAX_QUEUED_MESSAGES: 100,\n            MAX_QUEUED_MESSAGES_SIZE: 15 * 1024 * 1024,\n            WAIT_MESSAGE_CHECK_INTERVAL: 700,\n            SEND_RESOLVE_TIMEOUT: 500\n        };\n\n        this.OutputWsConfiguration = {\n            BUCKET_REFRESH_RATE: 10,\n            MAX_AUG_MESSAGES: 100,\n            MAX_LOG_ITEMS: 200,\n            MAX_STATUS_UPDATES: 200,\n        };\n\n        this.InstrumentationConfig = {\n            MIN_TIME_BETWEEN_HITS_MS: 100,\n            MAX_AUG_TIME_MS: 400,\n            AUG_RATE_LIMITER_MINIMUM_DURATION_TIME_NS: 1000 * 1000,\n            MAX_SCRIPTS_COUNT_FAIL_SAFE: 20000,\n            MAX_SCRIPTS_SIZE_FAIL_SAFE: 75 * 1000 * 1000,\n            CLEANUP_ASYNC_CALLSTACK_INTERVAL_MILLISECONDS: 250\n        };\n\n        this.GitConfiguration = {\n            GIT_COMMIT: null,\n            GIT_ORIGIN: null,\n            SOURCES: null\n        }\n\n        this.MonitorConfiguration = {\n            ENABLED: false,\n            CPU_CHECK_GAP: 500\n        }\n\n        this.HeapSnapshotConfiguration = {\n            SIGNAL: \"SIGUSR1\",\n            HEAP_PATH: null\n        }\n\n        this.MemoryUsageLogService = {\n            ENABLED: false,\n            LOG_FILE: null,\n            TRACE_GC_ENABLED: false,\n            INTERVAL_SECONDS: 60\n        }\n\n        this.LogHandlerService = {\n            ENABLED: false,\n            CONSOLE_FUNCTIONS_HOOK_ENABLED: false\n        }\n\n        this.DebuggerService = {\n            WAIT_SECONDS_TO_CLOSE_DEBUGGER_AFTER_NO_AUGS: 600\n        }\n\n        this.DumpConfig = {\n            STRING_CACHE_USERMESSAGE: false,\n        }\n    }\n\n    updateConfig(newConfig, configObject) {\n        newConfig.forEach(function(v, k) {\n            switch (k) {\n                case \"NODE_StringCache_UserMessage\":\n                    configObject.DumpConfig.STRING_CACHE_USERMESSAGE = trueValues.indexOf(v) !== -1;\n                    break;\n            }\n        });\n    }\n}\n\nmodule.exports = new Config();"],"file":"config.js"}