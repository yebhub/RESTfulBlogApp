{"version":3,"sources":["../../../../src/augs/locations/LocationFileLine.js"],"names":["path","require","ALLOWED_EXTENSION","LocationFileLine","constructor","configuration","factory","filename","String","RookAugInvalidKey","lineno","Number","isInteger","fileHash","sha256","lineCrc32","line_crc32_2","lineUnique","line_unique","includeExternals","undefined","folder","dirname","addAug","triggerServices","aug","isValidFilePath","logger","warn","id","setRemoved","debuggerService","getService","setPending","registerNotification","matchInfo","script","error","e","message","exception","setError","RookError","match","jsonName"],"mappings":"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","sourcesContent":["\"use strict\";\r\nconst path = require('path');\r\n\r\nimport RookError from \"../../processor/RookError\";\r\n\r\nimport {logger} from '../../logger';\r\n\r\nimport { RookAugInvalidKey } from '../../exceptions'\r\n\r\nconst ALLOWED_EXTENSION = /\\.([cm]?jsx?|tsx?|coffee)$/si;\r\n\r\nexport default class LocationFileLine {\r\n\r\n    constructor(configuration, factory) {\r\n        this.filename = configuration.filename;\r\n        if (!(typeof this.filename === 'string' || this.filename instanceof String)) {\r\n            throw new RookAugInvalidKey('filename'. configuration);\r\n        }\r\n\r\n        this.lineno = configuration.lineno;\r\n        if (!Number.isInteger(this.lineno)) {\r\n          throw new RookAugInvalidKey('lineno'. configuration);\r\n        }\r\n\r\n        this.fileHash = configuration.sha256 || null;\r\n\r\n        this.lineCrc32 = configuration.line_crc32_2 || null;\r\n        // If missing, we assume line is not unique\r\n        this.lineUnique = configuration.line_unique || false;\r\n\r\n        this.includeExternals = configuration.includeExternals;\r\n        // If auto mode, guess based on file name\r\n        if (null === this.includeExternals || undefined === this.includeExternals) {\r\n\r\n            // If filename is not a string, we can't auto-detect\r\n            if (typeof this.filename !== 'string' && !(this.filename instanceof String)) {\r\n                this.includeExternals = false;\r\n            } else {\r\n                // Get folder name\r\n                const folder = path.dirname(this.filename);\r\n\r\n                // If folder exists and is not generic, it is safe to include externals\r\n                this.includeExternals = folder !== '.' && folder !== 'lib' && folder !== 'src';\r\n            }\r\n        }\r\n    }\r\n\r\n    addAug(triggerServices, aug) {\r\n        if (!this.isValidFilePath()){\r\n            logger.warn(`Discarding aug ${aug.id} due to bad file extension ${this.filename}`);\r\n            aug.setRemoved();\r\n            return;\r\n        }\r\n\r\n        let debuggerService = triggerServices.getService(\"DebuggerService\");\r\n\r\n        aug.setPending();\r\n\r\n        debuggerService.registerNotification(aug, this.filename, this.fileHash, this.includeExternals, this.lineno,\r\n            this.lineCrc32, this.lineUnique,\r\n          (matchInfo) => {\r\n            if ( (null !== matchInfo.script) && (undefined !== matchInfo.script) ) {\r\n                try {\r\n                    if (matchInfo.error !== null) {\r\n                        throw matchInfo.error;\r\n                    }\r\n\r\n                    debuggerService.addAug(matchInfo, aug);\r\n                } catch (e) {\r\n                    const message = \"Exception when adding aug\";\r\n                    logger.exception(message, e);\r\n                    aug.setError(new RookError(e, message));\r\n                }\r\n            }\r\n        }, () => {\r\n            aug.setRemoved();\r\n        });\r\n    }\r\n\r\n    isValidFilePath() {\r\n        return this.filename.match(ALLOWED_EXTENSION);\r\n    }\r\n}\r\n\r\nLocationFileLine.jsonName = \"file_line\";\r\n"],"file":"LocationFileLine.js"}