{"version":3,"sources":["../../../src/augs/Aug.js"],"names":["utils","require","uuid4","process","__rookout_backchannel","DebuggerBackchannel","ContainerNamespace","ObjectNamespace","JSObjectNamespace","Aug","constructor","augId","location","action","condition","output","triggerServices","maxAugTime","limits","status","enabled","_hasBeenRateLimited","_warningCache","Map","_logCache","undefined","length","rateLimiter","RateLimiter","executed","addAug","e","message","logger","exception","setError","RookError","removeAugTemporarilyAndReapplyAfterDuration","duration","info","removeAugTemporarily","execute","stack","extracted","startTime","getTimeInNanoseconds","checkRateLimit","record","namespace","readKey","NoopNamespaceInstance","JSUtilsNamespaceInstance","ProcessStateNamespaceInstance","evaluate","msgId","replace","debug","writeAttribute","UserWarnings","RookRuleMaxExecutionTimeReached","rookError","shouldSilenceLog","setActive","sendRuleStatus","setPending","setRemoved","error","setUnknown","sendWarning","warn","logCache","has","size","set","allow","areUserMessagesFull","RookRuleRateLimited","window_size_ms","NanosecToMillisec","window_size"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nimport RookError from \"../processor/RookError\";\r\nimport {RookRuleMaxExecutionTimeReached, RookRuleRateLimited} from \"../exceptions\";\r\n\r\nimport {logger} from \"../logger\";\r\nimport UserWarnings from \"../UserWarnings\";\r\nimport ContainerNamespace from \"../processor/namespaces/ContainerNamespace\"\r\nimport { JSUtilsNamespaceInstance } from \"../processor/namespaces/JSUtilsNamespace\"\r\nimport { NoopNamespaceInstance } from \"../processor/namespaces/NoopNamespace\"\r\nimport { ProcessStateNamespaceInstance } from \"../processor/namespaces/ProcessStateNamespace\"\r\nimport RateLimiter from \"./RateLimiter\";\r\nimport DebuggerBackchannel from \"../services/DebuggerBackchannel\";\r\nimport JSObjectNamespace from \"../processor/namespaces/JSObjectNamespace\";\r\nconst utils = require(\"../utils\");\r\nconst uuid4 = require(\"uuid/v4\");\r\n\r\nprocess.__rookout_backchannel = new DebuggerBackchannel();\r\nprocess.__rookout_backchannel.ContainerNamespace = ContainerNamespace;\r\nprocess.__rookout_backchannel.ObjectNamespace = JSObjectNamespace;\r\n\r\nexport default class Aug {\r\n    constructor(augId, location, action, condition, output, triggerServices, maxAugTime, limits) {\r\n        this.triggerServices = triggerServices;\r\n        this.augId = augId;\r\n        this.location = location;\r\n        this.action = action;\r\n        this.output = output;\r\n        this.status = null;\r\n        this.maxAugTime = maxAugTime;\r\n        this.enabled = true;\r\n        this.condition = condition;\r\n        this._hasBeenRateLimited = false;\r\n        this._warningCache = new Map();\r\n        this._logCache = new Map();\r\n\r\n        if (limits !== undefined && limits.length > 0) {\r\n            this.rateLimiter = new RateLimiter(limits[0], limits[1]);\r\n        } else {\r\n            this.rateLimiter = new RateLimiter();\r\n        }\r\n\r\n        this.executed = false;\r\n    }\r\n\r\n    addAug() {\r\n        try {\r\n            this.location.addAug(this.triggerServices, this);\r\n        } catch (e) {\r\n            const message = \"Exception when adding aug\";\r\n            logger.exception(message, e);\r\n            this.setError(new RookError(e, message));\r\n        }\r\n    }\r\n\r\n    removeAugTemporarilyAndReapplyAfterDuration(duration) {\r\n        logger.info(\"Temporarily removing aug %s for %sms\", this.augId, duration);\r\n        this.triggerServices.removeAugTemporarily(this.augId, duration);\r\n    }\r\n\r\n    execute(stack, extracted) {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const startTime = utils.getTimeInNanoseconds();\r\n            if (!this.checkRateLimit(startTime)) {\r\n                let duration = utils.getTimeInNanoseconds() - startTime;\r\n                this.rateLimiter.record(startTime, duration);\r\n                return;\r\n            }\r\n\r\n            let namespace = new ContainerNamespace({\r\n                'frame': stack ? stack.readKey(0) : NoopNamespaceInstance,\r\n                'stack': stack || NoopNamespaceInstance,\r\n                'utils': JSUtilsNamespaceInstance,\r\n                'trace': NoopNamespaceInstance,\r\n                'state': ProcessStateNamespaceInstance,\r\n                \"extracted\": extracted\r\n            });\r\n\r\n            if (this.condition !== undefined) {\r\n                if (!this.condition.evaluate(namespace)) {\r\n                    const duration = utils.getTimeInNanoseconds() - startTime;\r\n                    this.rateLimiter.record(startTime, duration);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const msgId = uuid4().replace(/\\-/g, \"\");\r\n\r\n            if (this.executed) {\r\n                logger.debug(\"Executing aug-\\t%s (msg ID %s)\", this.augId, msgId);\r\n            } else {\r\n                logger.info(\"Executing aug for the first time - %s\", this.augId);\r\n                this.executed = true;\r\n            }\r\n\r\n            namespace.writeAttribute('store', new ContainerNamespace({}));\r\n            this.action.execute(this.augId, msgId, namespace, this.output, new UserWarnings(this));\r\n\r\n            let duration = utils.getTimeInNanoseconds() - startTime;\r\n\r\n            this.rateLimiter.record(startTime, duration);\r\n\r\n            if (this.maxAugTime && this.maxAugTime > 0 && duration > this.maxAugTime) {\r\n                this.enabled = false;\r\n                throw new RookRuleMaxExecutionTimeReached();\r\n            }\r\n        } catch (e) {\r\n            const message = \"Exception while processing Aug\";\r\n            let rookError = new RookError(e, message);\r\n\r\n            if (!this.shouldSilenceLog(rookError, this._logCache)) {\r\n                logger.exception(message, e);\r\n            }\r\n\r\n            this.setError(rookError);\r\n        }\r\n    }\r\n\r\n    setActive() {\r\n        this.sendRuleStatus(\"Active\");\r\n    }\r\n\r\n    setPending() {\r\n        this.sendRuleStatus(\"Pending\");\r\n    }\r\n\r\n    setRemoved() {\r\n        this.sendRuleStatus(\"Deleted\");\r\n    }\r\n\r\n    setError(error) {\r\n        this.sendRuleStatus(\"Error\", error);\r\n    }\r\n\r\n    setUnknown(error) {\r\n        this.sendRuleStatus(\"Unknown\", error);\r\n    }\r\n\r\n    sendWarning(error) {\r\n        if (this.shouldSilenceLog(error, this._warningCache)) {\r\n            return;\r\n        }\r\n\r\n        logger.warn(error.message);\r\n\r\n        this.output.sendWarning(this.augId, error);\r\n    }\r\n\r\n    sendRuleStatus(status, error=null) {\r\n        if (this.status === status) {\r\n            return;\r\n        }\r\n\r\n        logger.info(\"Updating rule status for %s to %s\", this.augId, status);\r\n\r\n        this.status = status;\r\n        this.output.sendRuleStatus(this.augId, status, error);\r\n    }\r\n\r\n    shouldSilenceLog(error, logCache) {\r\n        if (logCache.has(error.message) || logCache.size >= 10) {\r\n            return true;\r\n        }\r\n\r\n        logCache.set(error.message, true);\r\n\r\n        return false;\r\n    }\r\n\r\n    checkRateLimit(startTime) {\r\n        try {\r\n            if (!this.rateLimiter.allow(startTime) || this.output.areUserMessagesFull()) {\r\n                if (!this._hasBeenRateLimited) {\r\n                    this.sendWarning(new RookError(new RookRuleRateLimited()));\r\n                    this._hasBeenRateLimited = true;\r\n                }\r\n                // removeAugTemporarilyAndReapplyAfterDuration expects to get a duration of timeout in milliseconds\r\n                // and window_size is currently in nanoseconds\r\n                let window_size_ms = utils.NanosecToMillisec(this.rateLimiter.window_size);\r\n                this.removeAugTemporarilyAndReapplyAfterDuration(window_size_ms / 2);\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n"],"file":"Aug.js"}