{"version":3,"sources":["../../../src/augs/AugFactory.js"],"names":["config","require","utils","AugFactory","constructor","output","processorFactory","ProcessorFactory","getAug","configuration","triggerServices","augId","String","RookAugInvalidKey","jsonLocation","location","getLocation","jsonAction","action","ActionRunProcessor","condition","conditionConfiguration","Condition","maxAugTime","InstrumentationConfig","MAX_AUG_TIME_MS","MSToNS","limitsSpec","limits","undefined","includes","limitMatches","match","length","defaultWindowQuote","defaultWindowSize","push","Aug","name","LocationFileLine","LocationLogHandler","RookUnsupportedLocation"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nimport Aug from \"./Aug\";\r\nimport ActionRunProcessor from \"./actions/ActionRunProcessor\";\r\nimport LocationFileLine from \"./locations/LocationFileLine\";\r\nimport ProcessorFactory from \"../processor/ProcessorFactory\";\r\nimport Condition from \"./conditions/Condition\"\r\nconst config = require('../config');\r\nconst utils = require('../utils');\r\n\r\nimport {RookAugInvalidKey, RookUnsupportedLocation} from \"../exceptions\";\r\nimport LocationLogHandler from \"./locations/LocationLogHandler\";\r\n\r\nexport default class AugFactory {\r\n\r\n    constructor(output) {\r\n        this.output = output;\r\n\r\n        this.processorFactory = new ProcessorFactory();\r\n    }\r\n\r\n    getAug(configuration, triggerServices) {\r\n        const augId = configuration[\"id\"];\r\n\r\n        if (!(typeof augId === 'string' || augId instanceof String)) {\r\n            throw new RookAugInvalidKey('id', configuration);\r\n        }\r\n\r\n        const jsonLocation = configuration[\"location\"];\r\n\r\n        if (null == jsonLocation) {\r\n            throw new RookAugInvalidKey('location', configuration);\r\n        }\r\n\r\n        const location = this.getLocation(jsonLocation);\r\n\r\n        const jsonAction = configuration[\"action\"];\r\n\r\n        if (null == jsonAction) {\r\n            throw new RookAugInvalidKey('action', configuration);\r\n        }\r\n\r\n        const action = new ActionRunProcessor(jsonAction, this.processorFactory);\r\n\r\n        let condition;\r\n\r\n        const conditionConfiguration = configuration['conditional'];\r\n\r\n        if (null != conditionConfiguration) {\r\n            condition = new Condition(conditionConfiguration);\r\n        }\r\n\r\n        let maxAugTime = configuration.maxAugTime === 0 ? 0 :\r\n            configuration.maxAugTime ||\r\n            config.InstrumentationConfig.MAX_AUG_TIME_MS;\r\n\r\n        maxAugTime = utils.MSToNS(maxAugTime);\r\n\r\n        let limitsSpec = configuration['rateLimit'];\r\n        let limits = [];\r\n\r\n        if (limitsSpec !== undefined && limitsSpec.includes('/')) {\r\n            let limitMatches = limitsSpec.match(/^(\\d+)\\/(\\d+)$/);\r\n\r\n            if (limitMatches !== null) {\r\n                limits = [utils.MSToNS(limitMatches[1]), utils.MSToNS(limitMatches[2])];\r\n            }\r\n        }\r\n\r\n        if (limits.length === 0) {\r\n            const defaultWindowQuote = utils.MSToNS(500);\r\n            const defaultWindowSize = utils.MSToNS(5000);\r\n            limits.push(defaultWindowQuote, defaultWindowSize);\r\n        }\r\n\r\n        return new Aug(augId, location, action, condition, this.output, triggerServices, maxAugTime, limits);\r\n    }\r\n\r\n    getLocation(jsonLocation) {\r\n        switch (jsonLocation.name){\r\n            case \"file_line\":\r\n                return new LocationFileLine(jsonLocation, this.processorFactory);\r\n            case \"log_handler\":\r\n                return new LocationLogHandler(jsonLocation, this.processorFactory)\r\n            default:\r\n                throw new RookUnsupportedLocation(jsonLocation.name);\r\n        }\r\n    }\r\n}\r\n"],"file":"AugFactory.js"}