{"version":3,"sources":["../../../../src/processor/paths/ArithmeticPath.js"],"names":["exceptions","require","maps","ops","Map","level1","level2","level3","level4","level5","allLevels","Marker","write","namespace","value","RookOperationReadOnly","FunctionOperation","constructor","funcName","funcArgs","read","create","callMethod","AttributeOperation","name","RookAttributeNotFound","readAttribute","e","writeAttribute","ContainerNamespace","LookupOperation","length","substring","Number","readKey","OperationList","list","i","actions","is_primitive","obj","Array","isArray","NonPrimitiveNamespaceResult","NamespaceResult","ToolException_","size","RookInvalidArithmeticPath","expression","get_obj","result","undefined","exc","toString","ObjectMarker","text_ready","text","path","SimpleObjectMarker","Text","str","Array_","Bool","bool","boolFalse","boolTrue","Null","nullInstance","Undefined","undefinedInstance","_opMap","a","b","Opt","opt","level","optUpperCase","toUpperCase","key","found","innerValue","executeOperation","get","Boolean","RookNonPrimitiveObjectType","isInteger","JSObjectNamespace","item","includes","itr","String","FlatOpt","flatElements","slice","shouldStop","currentOpt","splice","TreeFlatter","flattedTree","run","currentElement","push","elements","make_lookup_operation","input","start","end","make_function_operation","functionName","args","make_function_operation_access","make_attribute_operation","make_attribute","make_and_execute_namespace_operation","operations","nn","op","make_comp_exp_ex","make_comp_exp","make_opt","make_apostrophe_string","make_string","make_list","flatter","substr","make_float","parseFloat","split","join","make_number","parseInt","make_char","make_bool","make_null","make_undefined","ArithmeticPath","configuration","negation","string","startsWith","endsWith","parse","ToolException","readFrom","rootNamespace","normalizeResult","writeTo","newArr","el","res"],"mappings":"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","sourcesContent":["import JSObjectNamespace from \"../namespaces/JSObjectNamespace\";\nconst exceptions = require('../../exceptions');\nimport {\n    ToolException, RookAttributeNotFound,\n    RookNonPrimitiveObjectType,\n    RookOperationReadOnly\n} from '../../exceptions'\nimport ContainerNamespace from '../namespaces/ContainerNamespace'\n\n/*\nCanopy is used to build and evaluate a tree of operations.\na .peg file (Rookout/canopy/ArithmeticPath.peg) is compiled into the various rooks languages.\nCanopy is a PEG parser compiler - and i extend its goal to actually evaluate our arithmetic paths.\n */\n\nconst maps = require('./ArithmeticPathInternal');\n\nconst ops = new Map([   [ \"NE\",  \"!=\"],\n                        [\"=\", \"==\"],\n                        [\"EQ\", \"==\"],\n                        [\"LT\", \"<\"],\n                        [\"GT\", \">\"],\n                        [\"GE\", \">=\"],\n                        [\"LE\", \"<=\"],\n                        [\"AND\", \"&&\"],\n                        [\"OR\", \"||\"]]);\n\nconst level1 = [\"*\" , \"/\"];\nconst level2 = [\"+\" , \"-\"];\nconst level3 = [\"<=\" , \">=\" , \"!=\" , \"=\" , \"==\" ,\n    \">\" , \"<\" ,\n    \"LT\" , \"GT\" , \"LE\" , \"GE\" , \"EQ\" , \"NE\" ,\n    \"lt\" , \"gt\" , \"le\" , \"ge\" , \"eq\" , \"ne\"];\nconst level4 = [\"in\" , \"IN\"];\nconst level5 = [\"or\" , \"OR\" , \"||\" , \"and\" , \"AND\" , \"&&\"];\n\nconst allLevels = [level1, level2, level3, level4, level5];\n\nclass Marker {\n\n    write(namespace, value) {\n        throw new RookOperationReadOnly(\"Marker\")\n    }\n\n}\n\nclass FunctionOperation extends Marker {\n\n    constructor(funcName, funcArgs) {\n        super();\n        this.funcName = funcName;\n        this.funcArgs = funcArgs;\n    }\n\n    read(namespace, create) {\n        return namespace.callMethod(this.funcName, this.funcArgs)\n    }\n}\n\nclass AttributeOperation extends Marker {\n\n    constructor(name) {\n        super();\n        this.name = name;\n    }\n\n    read(namespace, create) {\n        if (namespace === null){\n            throw new RookAttributeNotFound(this.name);\n        }\n\n        try {\n            return namespace.readAttribute(this.name)\n        } catch (e) {\n            if (create && e instanceof RookAttributeNotFound) {\n                namespace.writeAttribute(this.name, new ContainerNamespace({}));\n                return namespace.readAttribute(this.name)\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    write(namespace, value){\n        return namespace.writeAttribute(this.name, value)\n    }\n}\n\nclass LookupOperation extends Marker {\n\n    constructor(name) {\n        super();\n        if (name.length > 1 && name[0] === \"'\" && name[name.length - 1] === \"'\") {\n            this.name = name.substring(1, name.length - 1)\n        } else if (name.length > 1 && name[0] === '\"' && name[name.length - 1] === '\"') {\n            this.name = name.substring(1, name.length - 1)\n        } else {\n            this.name = Number(name)\n        }\n    }\n\n    read(namespace, create) {\n        return namespace.readKey(this.name)\n    }\n\n    write(namespace, value) {\n        throw RookOperationReadOnly(\"LookupOperation\")\n    }\n}\n\nclass OperationList extends Marker {\n    constructor(list) {\n        super();\n        this.list = list;\n    }\n\n    read(namespace, create) {\n        try {\n            // execute the operation chain.\n            for (let i = 0; i < this.list.length; i++) {\n                namespace = this.list[i].read(namespace, create);\n            }\n\n            if (!actions.is_primitive(namespace.obj) && !(Array.isArray(namespace.obj))) {\n                return new NonPrimitiveNamespaceResult(namespace, \"<missing>\");\n            }\n\n            return new NamespaceResult(namespace);\n        }\n        catch (e) {\n            return new ToolException_(e);\n        }\n    }\n\n    write(namespace, value){\n        // Verify the path is valid for writing\n        const size = this.list.length;\n        if (size === 0) {\n            throw new exceptions.RookInvalidArithmeticPath(this.expression, null);\n        }\n\n        // execute the operation chain.\n        let i = 0;\n        for (; i < size - 1; i++) {\n            namespace = this.list[i].read(namespace, true);\n        }\n\n        return this.list[i].write(namespace, value);\n    }\n\n    get_obj(namespace) {\n        const result = this.read(namespace, false);\n        if (undefined != result.get_obj) {\n            return result.get_obj();\n        } else {\n            return result;\n        }\n    }\n}\n\nclass ToolException_ extends Marker {\n    constructor(exc) {\n        super();\n\n        this.obj = exc;\n    }\n\n    toString() {\n        return this.obj.toString();\n    }\n}\n\nclass ObjectMarker extends Marker {\n    read(namespace, create) {\n        return this;\n    }\n}\n\nclass NamespaceResult extends ObjectMarker {\n    constructor(namespace) {\n        super();\n\n        this.obj = namespace;\n\n        this.text_ready = false;\n        this.text = null;\n    }\n\n    toString() {\n        if (!this.text_ready) {\n            if (this.obj.obj === undefined) {\n                this.text = \"'undefined'\";\n            } else {\n                if (this.obj.obj === null) {\n                    this.text = \"'null'\";\n                } else {\n                    this.text =  this.obj.obj.toString();\n                }\n            }\n\n            this.text_ready = true;\n        }\n\n        return this.text;\n    }\n\n    get_obj(){\n        return this.obj.obj;\n    }\n}\n\nclass NonPrimitiveNamespaceResult extends NamespaceResult {\n    constructor(namespace, path) {\n        super(namespace);\n\n        this.path = path;\n    }\n\n    toString() {\n        return 'NonPrimitiveNamespaceResult';\n    }\n}\n\nclass SimpleObjectMarker extends ObjectMarker {\n    constructor(obj) {\n        super();\n        this.obj = obj;\n    }\n\n    toString() {\n        return this.obj.toString();\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nclass Text extends ObjectMarker {\n    constructor(str) {\n        super();\n        this.obj = str;\n    }\n\n    toString() {\n        return this.obj;\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nclass Array_ extends ObjectMarker {\n    constructor(list, str) {\n        super();\n        this.obj = list;\n        this.text = str;\n    }\n\n    toString() {\n        return this.text;\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nclass Bool extends ObjectMarker {\n    constructor(bool) {\n        super();\n        this.obj = (bool === 'true') || (bool === 'True') || (bool === true);\n    }\n\n    toString() {\n        return this.obj.toString();\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nconst boolFalse = new Bool(false);\nconst boolTrue = new Bool(true);\n\nclass Null extends ObjectMarker {\n    constructor() {\n        super();\n        this.obj = null;\n    }\n\n    toString() {\n        return 'null';\n    }\n\n    get_obj(){\n        return this.obj;\n    }\n}\n\nconst nullInstance = new Null();\n\nclass Undefined extends ObjectMarker {\n    constructor() {\n        super();\n        this.obj = undefined;\n    }\n\n    toString() {\n        return 'undefined';\n    }\n\n    get_obj() {\n        return this.obj;\n    }\n}\n\nconst undefinedInstance = new Undefined();\n\nconst _opMap = new Map([\n    [ \"+\", function(a, b) { return a + b; }],\n    [\"-\", function(a, b) { return a - b; }],\n    [\"/\", function(a, b) { return a / b; }],\n    [\"*\", function(a, b) { return a * b; }],\n\n    [\"<\", function(a, b) { return a < b; }],\n    [\"<=\", function(a, b) { return a <= b; }],\n    [\">\", function(a, b) { return a > b; }],\n    [\">=\", function(a, b) { return a >= b; }],\n    [\"!=\", function(a, b) { return a !== b; }],\n    [\"!==\", function(a, b) { return a !== b; }],\n    [\"=\", function(a, b) { return a === b; }],\n    [\"==\", function(a, b) { return a === b; }],\n    [\"===\", function(a, b) { return a === b; }],\n    //\"in\": function(a, b) { return a in b; },lambda a, b: a in b,  # should use this...\n    [\"&&\", function(a, b) { return a && b; }],\n    [\"||\", function(a, b) { return a || b; }]]);\n\nclass Opt extends Marker {\n    constructor (opt) {\n        super();\n        this.opt = opt;\n        this.level = null;\n\n        let optUpperCase = opt.toUpperCase();\n\n        for (let [key, value] of ops) {\n            if (key === optUpperCase) {\n                this.opt = value;\n                break;\n            }\n        }\n\n        let level = 0;\n        let found = false;\n        for (let value of allLevels) {\n            for (let innerValue of value) {\n                if (opt === innerValue) {\n                    this.level = level;\n                    found = true;\n                    break;\n                }\n            }\n            if (found) {\n                break;\n            }\n            level += 1;\n        }\n\n        if (!found) {\n            throw new exceptions.RookInvalidArithmeticPath(\"Condition could not be resolved: \" + opt);\n        }\n    }\n\n    executeOperation (namespace, a, b) {\n        a = a.read(namespace);\n        if (a instanceof ToolException_) {\n            return a;\n        }\n\n        b = b.read(namespace);\n        if (b instanceof ToolException_) {\n            return b;\n        }\n\n        switch (this.level) {\n            case 0:\n            case 1:\n            case 2:\n            case 4:\n                let result = _opMap.get(this.opt)(a.get_obj(namespace), b.get_obj(namespace));\n\n                if (result.constructor === Boolean) {\n                    if (result === false) {\n                        if (a instanceof NonPrimitiveNamespaceResult) {\n                            if (!(b instanceof Undefined) && !(b instanceof Null)) {\n                                return new ToolException_(new RookNonPrimitiveObjectType(a.path));\n                            }\n                        }\n                        if (b instanceof NonPrimitiveNamespaceResult) {\n                            if (!(a instanceof Undefined) && !(a instanceof Null)) {\n                                return new ToolException_(new RookNonPrimitiveObjectType(b.path));\n                            }\n                        }\n\n                        return boolFalse;\n                    } else {\n                        return boolTrue;\n                    }\n                }\n\n                if (result instanceof Bool) {\n                    return result;\n                }\n\n                if (Number.isInteger(result)) {\n                    return new SimpleObjectMarker(result);\n                }\n\n                return new Text(result);\n            case 3:\n                if (b instanceof NonPrimitiveNamespaceResult) {\n                    return new ToolException_(new RookNonPrimitiveObjectType(b.path));\n                }\n\n                if (!(b instanceof Array_) && !(b instanceof NamespaceResult) && !(b instanceof Text)) {\n                    return boolFalse;\n                }\n\n                if (b.obj instanceof JSObjectNamespace) {\n                    if (Array.isArray(b.obj.obj)) {\n                        for (let item of b.obj.obj) {\n                            if (item === a.obj) {\n                                return boolTrue;\n                            }\n                        }\n                    }\n\n                    if (typeof b.obj.obj === 'string') {\n                        if (a instanceof Text) {\n                            return b.obj.obj.includes(a.obj) ? boolTrue : boolFalse;\n                        } else {\n                            return b.obj.obj.includes(a.obj.obj) ? boolTrue : boolFalse;\n                        }\n                    }\n\n                    return boolFalse;\n                } else {\n                    if (b instanceof Array_) {\n                        for (let itr of b.obj) {\n                            if (itr.toString() === a.toString() && itr.obj === a.obj) {\n                                return boolTrue;\n                            }\n                        }\n                    } else {\n                        if (b instanceof Text) {\n                            if (a.obj.constructor === String) {\n                                if (b.toString().includes(a.toString())) {\n                                    return boolTrue;\n                                }\n                            }\n                        } else {\n                            if (b instanceof NamespaceResult) {\n                                if (a.obj.constructor === String) {\n                                    if (b.toString().includes(a.toString())) {\n                                        return boolTrue;\n                                    }\n                                } else {\n                                    if (a instanceof NamespaceResult) {\n                                        if (b.toString().includes(a.toString())) {\n                                            return boolTrue;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                return boolFalse;\n        }\n    }\n}\n\nclass FlatOpt extends Marker {\n    constructor(flatElements) {\n        super();\n        this.flatElements = flatElements;\n    }\n\n    read(namespace, create) {\n        let flatElements = this.flatElements.slice();\n        while (flatElements.length > 1) {\n            let shouldStop = false;\n            for (let level = 0; level < allLevels.length && !shouldStop; level++) {\n                for (let i = 1; i < flatElements.length; i += 2) {\n                    let currentOpt = flatElements[i];\n                    if (currentOpt.level === level) {\n                        let result = currentOpt.executeOperation(namespace, flatElements[i - 1], flatElements[i + 1]);\n                        flatElements.splice(i - 1, 3);\n                        flatElements.splice(i - 1, 0, result);\n\n                        shouldStop = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return flatElements[0];\n    }\n\n    get_obj(namespace) {\n        const result = this.read(namespace, false);\n        if (undefined != result.get_obj) {\n            return result.get_obj();\n        } else {\n            return result;\n        }\n    }\n}\n\nclass TreeFlatter {\n    constructor() {\n        this.flattedTree = [];\n    }\n\n    run(currentElement) {\n        if (currentElement instanceof Marker) {\n            this.flattedTree.push(currentElement);\n        }\n\n        for (let e of currentElement.elements) {\n            if (e instanceof Marker) {\n                this.flattedTree.push(e);\n            } else {\n                this.run(e);\n            }\n        }\n\n        return this.flattedTree;\n    }\n}\n\nclass actions {\n\n    constructor() {\n    }\n\n    make_lookup_operation(input, start, end, elements) {\n        return new LookupOperation(input.substring(start + 1, end - 1));\n    }\n\n    make_function_operation(input, start, end, elements) {\n        // To build the function name, we will merge the unicode_set and all the unicode_set_with_numbers\n        // To build the args we will simply read the atom at index 3\n        // which can be result of another operation; thus checking for exception\n        // For further explanation, check ArithmeticPath.peg\n\n        let functionName = elements[0].text + elements[1].text;\n\n        if (elements[3] instanceof ToolException_) {\n            throw elements[3];\n        }\n\n        let args = (elements[3] instanceof Marker) ? elements[3].toString() : elements[3].text;\n        return new FunctionOperation(functionName, args);\n    }\n\n    make_function_operation_access(input, start, end, elements) {\n        // To build the function name, we will merge the unicode_set and all the unicode_set_with_numbers\n        // To build the args we will simply read the atom at index 4\n        // which can be result of another operation; thus checking for exception\n        // For further explanation, check ArithmeticPath.peg\n\n        let functionName = elements[1].text + elements[2].text;\n\n        if (elements[4] instanceof ToolException_) {\n            throw elements[4];\n        }\n\n        let args = (elements[4] instanceof Marker) ? elements[4].toString() : elements[4].text;\n        return new FunctionOperation(functionName, args);\n    }\n\n    make_attribute_operation(input, start, end, elements) {\n        return new AttributeOperation(input.substring(start + 1, end));\n    }\n\n    make_attribute(input, start, end, elements) {\n        return new AttributeOperation(input.substring(start, end));\n    }\n\n    static is_primitive(obj) {\n        return !(obj !== undefined && obj !== null && obj.constructor !== Number\n            && obj.constructor !== String && obj.constructor !== Boolean)\n    }\n\n    make_and_execute_namespace_operation(input, start, end, elements) {\n        // Element 1 will not be null\n        // Element 2 is a list of another elements (can be empty)\n        // element1.(element2.element3.element4)\n        // For further explanation, check ArithmeticPath.peg\n\n        try {\n            let operations = [];\n            operations.push(elements[1]);\n            for (let nn of elements[2].elements) {\n                operations.push(nn);\n            }\n\n            // Check if we have some exceptions in the operations chain - might happen if function parsing failed.\n            for (let op of operations) {\n                if (op instanceof ToolException_) {\n                    return op;\n                }\n            }\n\n            // As part of optimization, we don't actually execute the namespace here\n            return new OperationList(operations);\n        } catch (e) {\n            return new ToolException_(e);\n        }\n    }\n\n    make_comp_exp_ex(input, start, end, elements) {\n        // Element 2 is the actual expression\n        // For further explanation, check ArithmeticPath.peg\n        return elements[2];\n    }\n\n    make_comp_exp(input, start, end, elements) {\n        // We can assume the following: atom ( opt_ atom )*\n        // the first (which must be) will be simple atom\n        // the second and so forth will always be pair <Opt, Atom>\n        // Its important to remember that this execution will handle the inner brackets if exist\n        // In order to handle priority (which i could not figure out if available with canopy library):\n        // 1. lets make the tree flat\n        // 2. handle priority ourselves - (atom opt1 atom) will be handled before (atom opt2 atom) and will return TreeNode with result\n        // For further explanation, check ArithmeticPath.peg\n\n        // handle case the size is 1\n        if (elements[1].elements.length === 0) {\n            return elements[0];\n        }\n\n        let flatElements = [];\n        flatElements.push(elements[0]);\n        for (let nn of elements[1].elements) {\n            flatElements.push(nn.elements[0]);\n            flatElements.push(nn.elements[1]);\n        }\n\n        return new FlatOpt(flatElements);\n    }\n\n    make_opt(input, start, end, elements) {\n        return new Opt(elements[1].text);\n    }\n\n    make_apostrophe_string(input, start, end, elements) {\n        return new Text(elements[2].text);\n    }\n\n    make_string(input, start, end, elements) {\n        return new Text(elements[2].text);\n    }\n\n    make_list(input, start, end, elements) {\n        let flatter = new TreeFlatter();\n        let result = flatter.run(elements[3]);\n        return new Array_(result, input.substr(start, end));\n    }\n\n    make_float(input, start, end, elements) {\n        return new SimpleObjectMarker(parseFloat(input.substring(start, end).split(\" \").join(\"\")));\n    }\n\n    make_number(input, start, end, elements) {\n        return new SimpleObjectMarker(parseInt(input.substring(start, end).split(\" \").join(\"\"), 10));\n    }\n\n    make_char(input, start, end, elements) {\n        return new SimpleObjectMarker(input.substring(start, end).split(\" \").join(\"\"));\n    }\n\n    make_bool(input, start, end, elements) {\n        return new Bool(input.substring(start, end).split(\" \").join(\"\"));\n    }\n\n    make_null(input, start, end, elements) {\n      return nullInstance;\n    }\n\n    make_undefined(input, start, end, elements) {\n        return undefinedInstance;\n    }\n}\n\nexport default class ArithmeticPath {\n    constructor(configuration) {\n        this.negation = false;\n        let string = null;\n        if (typeof configuration === \"string\") {\n            string = configuration;\n        } else {\n            string = configuration['path'];\n        }\n\n        if (string.startsWith(\"NOT(\") && string.endsWith(\")\")) {\n            string = string.substring(\"NOT(\".length, string.length - 1);\n            this.negation = true;\n        }\n\n        if (string === \"\") {\n            throw new exceptions.RookInvalidArithmeticPath(string, null);\n        }\n\n        this.expression = string;\n        this.actions = new actions();\n\n        try {\n            this.operations = maps.parse(this.expression, { actions: this.actions });\n        } catch (e) {\n            if (e instanceof ToolException_) {\n                throw e.obj;\n            }\n            if (e instanceof ToolException) {\n                throw e;\n            }\n            throw new exceptions.RookInvalidArithmeticPath(this.expression, e);\n        }\n    }\n\n    readFrom(rootNamespace) {\n        const result = this.operations.read(rootNamespace, false);\n        return this.normalizeResult(result);\n    }\n\n    writeTo(rootNamespace, value) {\n        this.operations.write(rootNamespace, value);\n    }\n\n    normalizeResult(result) {\n        if (result instanceof Array_) {\n            let newArr = [];\n            for (let el of result.obj) {\n                newArr.push(el.obj);\n            }\n\n            return new JSObjectNamespace(newArr);\n        }\n\n        if (result instanceof NamespaceResult) {\n            return result.obj;\n        }\n\n        if (result instanceof ToolException_) {\n            throw result.obj;\n        }\n\n        if (result instanceof NonPrimitiveNamespaceResult) {\n            return result.obj;\n        }\n\n        let res = result.obj;\n        if (typeof res === 'boolean' && this.negation) {\n            res = !res;\n        }\n\n        return new JSObjectNamespace(res);\n    }\n}\n"],"file":"ArithmeticPath.js"}