{"version":3,"sources":["../../../src/processor/NamespaceSerializer.js"],"names":["variant_pb","require","timestamp_pb","isFloat","n","e","NamespaceSerializer","constructor","useStringCache","stringCache","getStringCache","dumps","namespace","logErrors","variant","Variant","dump","ContainerNamespace","dumpContainerNamespace","JSObjectNamespace","dumpJSObjectNamespace","ListNamespace","dumpListNamespace","InspectorTracebackNamespace","dumpInspectorTracebackNamespace","TypeError","message","clearVariant","setVariantType","Type","VARIANT_ERROR","setErrorValue","RookError","logger","exception","VARIANT_NAMESPACE","result","Namespace","key","Object","keys","namespaces","value","NamedValue","setName","setValue","addAttributes","setNamespaceValue","dumpJSObject","obj","dumpConfig","unsafeDumpJSObject","currentDepth","maxDepth","dumpMaxDepth","dumpBaseObject","undefined","VARIANT_UNDEFINED","VARIANT_NONE","VARIANT_INT","setIntValue","Number","isInteger","VARIANT_DOUBLE","setDoubleValue","String","VARIANT_STRING","string","setOriginalSize","length","maxString","substring","setValueIndexInCache","getStringIndexInCache","setStringValue","Date","VARIANT_TIME","date","Timestamp","isNaN","getTime","fromDate","setTimeValue","Array","isArray","dumpArray","Error","dumpException","VARIANT_CODE_OBJECT","codeValue","CodeObject","name","setCodeValue","dumpUserClass","VARIANT_MAX_DEPTH","setMaxDepthFlag","setMaxDepth","setOriginalType","__proto__","setOriginalTypeIndexInCache","symbols","getOwnPropertySymbols","objectKeys","objectWidth","objectWeight","maxWidth","parseInt","toString","getOwnPropertyDescriptor","VARIANT_DYNAMIC","attribute","index","symbol","symbolName","VARIANT_LIST","list","List","setType","getCommonType","maxCollectionDepth","maxItems","Math","min","i","item","addValues","setListValue","VARIANT_OBJECT","messageValue","messagePair","stackValue","stack","stackPair","originalType","listValue","commonType","originalSize","dumpInspectorArray","lengthString","description","match","readAttribute","InspectorObjectNamespace","dumpInspectorObjectNamespace","dumpInspectorDate","timeValue","clearAttributesList","clearIntValue","clearLongValue","clearDoubleValue","clearStringValue","clearListValue","clearMapValue","clearNamespaceValue","clearErrorValue","clearMessageValue","clearTimeValue","clearCodeValue","clearLargeIntValue","clearComplexValue","str","currentSize"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst variant_pb = require('../protobuf/variant_pb');\nconst timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb');\n\nimport {logger} from \"../logger\";\n\nimport RookError from './RookError';\n\nimport ContainerNamespace from './namespaces/ContainerNamespace';\nimport JSObjectNamespace from './namespaces/JSObjectNamespace';\nimport ListNamespace from './namespaces/ListNamespace';\nimport {InspectorTracebackNamespace} from \"./namespaces/InspectorTracebackNamespace\";\n\nfunction isFloat(n) {\n    try {\n        // This seems to throw sometimes :(\n        return n === +n && n !== (n|0);\n    } catch (e) {\n        return false;\n    }\n}\n\nexport default class NamespaceSerializer {\n    constructor(useStringCache = false) {\n        this.useStringCache = useStringCache\n        this.stringCache = {}\n\n        if (useStringCache) {\n            // Lock the 0 index since some variant will have no originalType (container for example)\n            this.stringCache[\"\"] = 0\n        }\n    }\n\n    getStringCache() {\n        return this.stringCache;\n    }\n\n    dumps(namespace, logErrors = true) {\n        let variant = new variant_pb.Variant();\n        this.dump(namespace, variant, logErrors);\n        return variant;\n    }\n\n    dump(namespace, variant, logErrors = true) {\n        try {\n            if (namespace instanceof ContainerNamespace) {\n                this.dumpContainerNamespace(namespace, variant, logErrors);\n            } else if (namespace instanceof JSObjectNamespace) {\n                this.dumpJSObjectNamespace(namespace, variant, logErrors);\n            } else if (namespace instanceof ListNamespace) {\n                this.dumpListNamespace(namespace, variant, logErrors);\n            } else if (namespace instanceof InspectorTracebackNamespace) {\n                this.dumpInspectorTracebackNamespace(namespace, variant);\n            } else {\n                throw new TypeError(\"Does not support serializing this type: \" + typeof namespace);\n            }\n        } catch (e) {\n            const message = \"Failed to serialize namespace\";\n\n            this.clearVariant(variant);\n            variant.setVariantType(variant_pb.Variant.Type.VARIANT_ERROR);\n\n            if (logErrors) {\n                variant.setErrorValue(new RookError(e, message).dumps());\n                logger.exception(message, e);\n            }\n        }\n    }\n\n    dumpContainerNamespace(namespace, variant, logErrors) {\n        variant.setVariantType(variant_pb.Variant.Type.VARIANT_NAMESPACE);\n\n        let result = new variant_pb.Variant.Namespace();\n        for (let key of Object.keys(namespace.namespaces)) {\n            let value = new variant_pb.Variant.NamedValue();\n            value.setName(key);\n            value.setValue(this.dumps(namespace.namespaces[key], logErrors));\n\n            result.addAttributes(value);\n        }\n\n        variant.setNamespaceValue(result);\n    }\n\n    dumpJSObjectNamespace(namespace, variant, logErrors) {\n        this.dumpJSObject(namespace.obj, variant, 0, namespace.dumpConfig, logErrors);\n    }\n\n    unsafeDumpJSObject(obj, variant, currentDepth, dumpConfig, logErrors) {\n        if (currentDepth >= dumpConfig.maxDepth) {\n            this.dumpMaxDepth(obj, variant, currentDepth, dumpConfig);\n            return;\n        }\n        this.dumpBaseObject(obj, variant, currentDepth, dumpConfig, logErrors);\n        if (undefined === obj) {\n            variant.setVariantType(variant_pb.Variant.Type.VARIANT_UNDEFINED);\n            return;\n        }\n\n        if (null === obj) {\n            variant.setVariantType(variant_pb.Variant.Type.VARIANT_NONE);\n            return;\n        }\n\n        if (obj === true || obj === false) {\n            variant.setVariantType(variant_pb.Variant.Type.VARIANT_INT);\n            variant.setIntValue(obj ? 1 : 0);\n            return;\n        }\n\n        // isFloat is not including int\n        if (isFloat(obj) || Number.isInteger(obj)) {\n            variant.setVariantType(variant_pb.Variant.Type.VARIANT_DOUBLE);\n            variant.setDoubleValue(obj);\n            return;\n        }\n\n        if (typeof obj === 'string' || obj instanceof String) {\n            variant.setVariantType(variant_pb.Variant.Type.VARIANT_STRING);\n\n            let string = new variant_pb.Variant.String();\n            string.setOriginalSize(obj.length);\n\n            if (obj.length > dumpConfig.maxString) {\n                if (!this.useStringCache) {\n                    string.setValue(obj.substring(0, dumpConfig.maxString));\n                } else {\n                    string.setValueIndexInCache(this.getStringIndexInCache(obj.substring(0, dumpConfig.maxString)));\n                }\n            } else {\n                if (!this.useStringCache) {\n                    string.setValue(obj);\n                } else {\n                    string.setValueIndexInCache(this.getStringIndexInCache(obj));\n                }\n            }\n\n            variant.setStringValue(string);\n            return;\n        }\n\n        if (obj instanceof Date) {\n            variant.setVariantType(variant_pb.Variant.Type.VARIANT_TIME);\n\n            let date = new timestamp_pb.Timestamp();\n\n            if (isNaN(obj.getTime())) {\n                // date is not valid\n                obj = new Date(0);\n            }\n\n            date.fromDate(obj);\n\n            variant.setTimeValue(date);\n            return;\n        }\n\n        if (Array.isArray(obj)) {\n            this.dumpArray(obj, variant, currentDepth, dumpConfig, logErrors);\n            return;\n        }\n\n        if (obj instanceof Error) {\n            this.dumpException(obj, variant, currentDepth, dumpConfig, logErrors);\n            return;\n        }\n\n        if (typeof obj === 'function') {\n            variant.setVariantType(variant_pb.Variant.Type.VARIANT_CODE_OBJECT);\n\n            let codeValue = new variant_pb.Variant.CodeObject();\n            codeValue.setName(obj.name);\n\n            variant.setCodeValue(codeValue);\n            return;\n        }\n        this.dumpUserClass(obj, variant, currentDepth, dumpConfig, logErrors);\n    }\n\n    dumpJSObject(obj, variant, currentDepth, dumpConfig, logErrors) {\n        try {\n            this.unsafeDumpJSObject(obj, variant, currentDepth, dumpConfig, logErrors);\n        } catch (e) {\n            const message = \"Failed to serialize object\";\n\n            this.clearVariant(variant);\n            variant.setVariantType(variant_pb.Variant.Type.VARIANT_ERROR);\n\n            if (logErrors) {\n                variant.setErrorValue(new RookError(e, message).dumps());\n                logger.exception(message, e);\n            }\n        }\n    }\n\n    dumpMaxDepth(variant) {\n        variant.setVariantType(variant_pb.Variant.Type.VARIANT_MAX_DEPTH);\n    }\n\n    setMaxDepthFlag(variant) {\n        variant.setMaxDepth(true);\n    }\n\n    dumpBaseObject(obj, variant, currentDepth, dumpConfig) {\n        // Try to get class name from prototype, if possible\n        if (!this.useStringCache) {\n            try {\n                variant.setOriginalType(obj.__proto__.constructor.name);\n            } catch (e) {\n                variant.setOriginalType(typeof obj);\n            }\n        } else {\n            try {\n                variant.setOriginalTypeIndexInCache(this.getStringIndexInCache(obj.__proto__.constructor.name));\n            } catch (e) {\n                variant.setOriginalTypeIndexInCache(this.getStringIndexInCache(typeof obj));\n            }\n        }\n\n        if (null === obj || undefined === obj) {\n            return;\n        }\n\n        // Don't dump values of strings or arrays as they cause issues\n        if (typeof obj === 'string' || obj instanceof String) {\n            return;\n        }\n\n        let symbols = Object.getOwnPropertySymbols(obj);\n        let objectKeys = Object.keys(obj);\n        let objectWidth = symbols.length + objectKeys.length;\n        let objectWeight = currentDepth + ((objectWidth >= dumpConfig.maxWidth) ? 2 : 1);\n\n        if ((objectWeight >= dumpConfig.maxDepth)) {\n            if (objectWidth) {\n                this.setMaxDepthFlag(variant);\n            }\n            return;\n        }\n\n        for (let key of objectKeys) {\n            if (obj[key] === obj) {\n                continue;\n            }\n            // If it's an Array, ignore it's index attributes\n\n            if (Array.isArray(obj) && parseInt(key).toString() === key) {\n                continue;\n            }\n            let value = new variant_pb.Variant();\n\n            if ('get' in Object.getOwnPropertyDescriptor(obj, key)) {\n                value.setVariantType(variant_pb.Variant.Type.VARIANT_DYNAMIC);\n            } else {\n                this.dumpJSObject(obj[key], value, objectWeight, dumpConfig);\n            }\n            let attribute = new variant_pb.Variant.NamedValue();\n\n            attribute.setName(key);\n            attribute.setValue(value);\n            variant.addAttributes(attribute);\n\n        }\n        // Protect against primitives pointing to themselves\n        for (let index in symbols) {\n            let symbol = symbols[index];\n            let symbolName = symbol.toString();\n\n            let value = new variant_pb.Variant();\n            this.dumpJSObject(obj[symbol], value, objectWeight, dumpConfig);\n\n            let attribute = new variant_pb.Variant.NamedValue();\n            attribute.setName(symbolName);\n            attribute.setValue(value);\n\n            variant.addAttributes(attribute);\n        }\n    }\n\n    dumpArray(obj, variant, currentDepth, dumpConfig, logErrors) {\n        variant.setVariantType(variant_pb.Variant.Type.VARIANT_LIST);\n\n        let list = new variant_pb.Variant.List();\n        list.setType(ListNamespace.getCommonType(list));\n        list.setOriginalSize(obj.length);\n\n        if (currentDepth < dumpConfig.maxCollectionDepth) {\n\n            const maxItems = Math.min(obj.length, dumpConfig.maxWidth);\n            for (let i = 0; i < maxItems; ++i) {\n                let item = new variant_pb.Variant();\n                this.dumpJSObject(obj[i], item, currentDepth + 1, dumpConfig, logErrors);\n                list.addValues(item);\n            }\n        }\n\n        variant.setListValue(list);\n    }\n\n    dumpException(obj, variant, currentDepth, dumpConfig, logErrors) {\n        variant.setVariantType(variant_pb.Variant.Type.VARIANT_OBJECT);\n\n        let messageValue = new variant_pb.Variant();\n        this.dumpJSObject(obj.message, messageValue, currentDepth + 1, dumpConfig, logErrors);\n\n        let messagePair = new variant_pb.Variant.NamedValue();\n        messagePair.setName('message');\n        messagePair.setValue(messageValue);\n        variant.addAttributes(messagePair);\n\n        let stackValue = new variant_pb.Variant();\n        this.dumpJSObject(obj.stack, stackValue, currentDepth + 1, dumpConfig, logErrors);\n\n        let stackPair = new variant_pb.Variant.NamedValue();\n        stackPair.setName('stack');\n        stackPair.setValue(stackValue);\n        variant.addAttributes(stackPair);\n    }\n\n    dumpUserClass(obj, variant, currentDepth, dumpConfig) {\n        variant.setVariantType(variant_pb.Variant.Type.VARIANT_OBJECT);\n    }\n\n    dumpListNamespace(namespace, variant, logErrors) {\n        variant.setVariantType(variant_pb.Variant.Type.VARIANT_LIST);\n        variant.setOriginalType(namespace.originalType);\n\n        let listValue = new variant_pb.Variant.List();\n        listValue.setType(namespace.commonType);\n        listValue.setOriginalSize(namespace.originalSize);\n\n        for (let item of namespace.list) {\n            listValue.addValues(this.dumps(item, logErrors));\n        }\n\n        variant.setListValue(listValue);\n    }\n\n    dumpInspectorTracebackNamespace(namespace, variant) {\n        if (!this.useStringCache) {\n            namespace.dump(variant, null);\n        } else {\n            namespace.dump(variant, this);\n        }\n    }\n\n    dumpInspectorArray(namespace, variant, currentDepth, dumpConfig, logErrors) {\n        variant.setVariantType(variant_pb.Variant.Type.VARIANT_LIST);\n\n        const lengthString = namespace.obj.description.match(/\\((\\d+)\\)/)[1];\n        const length = parseInt(lengthString);\n\n        let list = new variant_pb.Variant.List();\n        list.setType(ListNamespace.getCommonType(list));\n        list.setOriginalSize(length);\n\n        const maxItems = Math.min(length, dumpConfig.maxWidth);\n\n        if (currentDepth < dumpConfig.maxCollectionDepth) {\n\n            for (let i = 0; i < maxItems; ++i) {\n                let obj = null;\n\n                // Sparse arrays have missing objects as undefined\n                try {\n                    obj = namespace.readAttribute(i.toString());\n                } catch (e) {\n                    obj = new JSObjectNamespace(undefined);\n                }\n\n                let item = new variant_pb.Variant();\n\n                if (obj instanceof InspectorObjectNamespace) {\n                    this.dumpInspectorObjectNamespace(obj, item, currentDepth + 1, dumpConfig, logErrors);\n                } else {\n                    this.dumpJSObject(obj.obj, item, currentDepth + 1, dumpConfig, logErrors);\n                }\n\n                list.addValues(item);\n            }\n        }\n\n        variant.setListValue(list);\n    }\n\n    dumpInspectorDate(namespace, variant, currentDepth, dumpConfig) {\n        variant.setVariantType(variant_pb.Variant.Type.VARIANT_TIME);\n\n        let date = new timestamp_pb.Timestamp();\n\n        let timeValue = namespace.obj.description;\n        if (isNaN(timeValue.getTime())) {\n            // date is not valid\n            timeValue = new Date(0);\n        }\n\n        date.fromDate(new Date(timeValue));\n\n        variant.setTimeValue(date);\n    }\n\n    clearVariant(variant) {\n        variant.setVariantType(undefined);\n        variant.setOriginalType(undefined);\n        variant.clearAttributesList();\n\n        variant.clearIntValue();\n        variant.clearLongValue();\n        variant.clearDoubleValue();\n        variant.clearStringValue();\n        variant.clearListValue();\n        variant.clearMapValue();\n        variant.clearNamespaceValue();\n        variant.clearErrorValue();\n        variant.clearMessageValue();\n        variant.clearTimeValue();\n        variant.clearCodeValue();\n        variant.clearLargeIntValue();\n        variant.clearComplexValue();\n    }\n\n    getStringIndexInCache(str) {\n        if (str in this.stringCache) {\n            return this.stringCache[str];\n        }\n\n        let currentSize = Object.keys(this.stringCache).length;\n        this.stringCache[str] = currentSize\n        return currentSize\n    }\n}\n"],"file":"NamespaceSerializer.js"}