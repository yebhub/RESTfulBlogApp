{"version":3,"sources":["../../../../src/processor/namespaces/InspectorFrameNamespace.js"],"names":["extractor","InspectorFrameNamespace","Namespace","constructor","inspector","frame","scopes","this","undefined","position","readAttribute","name","session","index","process","__rookout_backchannel","add","error","post","callFrameId","expression","objectGroup","ret","exceptionDetails","RookAttributeNotFound","JSObjectNamespace","get","attr","delete","callMethod","args","filename","line","function","locals","dump","getPosition","module","populateScopes","result","depth","dumpConfig","parseInt","isNaN","dumpConfigs","toLowerCase","RookInvalidMethodArguments","i","length","k","Object","keys","object","maxDepth","ContainerNamespace","resolvePosition","context","scopeChain","scopeId","remoteScope","nextRemoteScope","active","type","scope","push","objectId","functionDeclaration","arguments","value","e","_this","global"],"mappings":"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","sourcesContent":["import Namespace from \"./Namespace\";\r\nimport JSObjectNamespace, { dumpConfigs } from './JSObjectNamespace'\r\nimport { RookAttributeNotFound, RookInvalidMethodArguments } from '../../exceptions'\r\nimport ContainerNamespace from \"./ContainerNamespace\";\r\n\r\nconst extractor = `\r\n    function copy(index) {\r\n      let scopes = process.__rookout_backchannel.get(index).scopes;\r\n      scopes[scopes.length - 1].object = this;\r\n     }\r\n`\r\n\r\nexport default class InspectorFrameNamespace extends Namespace {\r\n    constructor(inspector, frame) {\r\n        super();\r\n\r\n        this.inspector = inspector;\r\n        this.frame = frame;\r\n        this.scopes = null;\r\n        this.this = undefined;\r\n\r\n        this.position = null;\r\n    }\r\n\r\n    readAttribute(name) {\r\n        const session = this.inspector;\r\n        const index = process.__rookout_backchannel.add();\r\n\r\n        let error = false;\r\n\r\n        try {\r\n            session.post('Debugger.evaluateOnCallFrame', {\r\n                callFrameId: this.frame.callFrameId,\r\n                expression: `process.__rookout_backchannel.get(${index}).attr = ${name};`,\r\n                objectGroup: \"backtrace\",\r\n            }, ( ret ) => {\r\n                if (ret && ret.exceptionDetails) {\r\n                    error = true;\r\n                }\r\n            });\r\n\r\n            if (error) {\r\n                throw new RookAttributeNotFound(name);\r\n            } else {\r\n                return new JSObjectNamespace(process.__rookout_backchannel.get(index).attr);\r\n            }\r\n        } finally {\r\n            process.__rookout_backchannel.delete(index);\r\n        }\r\n    }\r\n\r\n    callMethod(name, args) {\r\n        switch (name) {\r\n            case \"filename\":\r\n            case \"module\":\r\n                return this.filename();\r\n            case \"line\":\r\n                return this.line();\r\n            case \"function\":\r\n            case \"method\":\r\n                return this.function();\r\n            case \"locals\":\r\n                return this.locals(args);\r\n            case \"dump\":\r\n                return this.dump(args);\r\n            default:\r\n                return super.callMethod(name, args);\r\n        }\r\n    }\r\n\r\n    filename() {\r\n        return new JSObjectNamespace(this.getPosition().filename);\r\n    }\r\n\r\n    module() {\r\n        return this.filename();\r\n    }\r\n\r\n    line() {\r\n        return new JSObjectNamespace(this.getPosition().line);\r\n    }\r\n\r\n    function() {\r\n        return new JSObjectNamespace(this.getPosition().function);\r\n    }\r\n\r\n    locals(args) {\r\n        this.populateScopes();\r\n\r\n        let result = {};\r\n\r\n        let depth = null;\r\n        let dumpConfig = null;\r\n\r\n        if (null != args && '' !== args) {\r\n            depth = parseInt(args);\r\n\r\n            if (isNaN(depth)) {\r\n                depth = null;\r\n                dumpConfig = dumpConfigs[args.toLowerCase()];\r\n\r\n                if (dumpConfig === undefined) {\r\n                    throw new RookInvalidMethodArguments('locals()', args);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = this.scopes.length - 1; i >= 0; i--) {\r\n            for (let k of Object.keys(this.scopes[i].object)) {\r\n                result[k] = new JSObjectNamespace(this.scopes[i].object[k], dumpConfig);\r\n\r\n                if (depth !== null && dumpConfig == null) {\r\n                    result[k].dumpConfig.maxDepth = depth;\r\n                }\r\n            }\r\n        }\r\n\r\n        result.this = new JSObjectNamespace(this.this);\r\n\r\n        return new ContainerNamespace(result);\r\n    }\r\n\r\n    dump(args) {\r\n        return new ContainerNamespace({\r\n            locals: this.locals(args),\r\n            module: this.module(),\r\n            filename: this.filename(),\r\n            line: this.line(),\r\n            function: this.function(),\r\n        })\r\n    }\r\n\r\n    getPosition() {\r\n        if (this.position === null) {\r\n            this.position = this.inspector.resolvePosition(this.frame);\r\n        }\r\n\r\n        return this.position;\r\n    }\r\n\r\n    populateScopes() {\r\n        if (this.scopes !== null) {\r\n            return this.scopes;\r\n        }\r\n\r\n        let scopes = [];\r\n\r\n        let session = this.inspector;\r\n        let index = process.__rookout_backchannel.add();\r\n\r\n        try {\r\n            let context = process.__rookout_backchannel.get(index);\r\n            let scopeChain = this.frame.scopeChain;\r\n\r\n            context.scopes = [];\r\n\r\n            for (let scopeId = 0; scopeId < scopeChain.length; scopeId++) {\r\n                let remoteScope = scopeChain[scopeId];\r\n                let nextRemoteScope = scopeChain[scopeId + 1];\r\n\r\n                let active = ((remoteScope.type === 'local' || remoteScope.type === 'catch' || remoteScope.type === 'block') ||\r\n                    (remoteScope.type === 'closure' && (nextRemoteScope === undefined || nextRemoteScope.type !== 'global')));\r\n\r\n                if (!active) continue;\r\n\r\n                let scope = {};\r\n                scope.type = remoteScope.type;\r\n                scope.object = {};\r\n                context.scopes.push(scope);\r\n\r\n                let error = null;\r\n                session.post('Runtime.callFunctionOn', {\r\n                    objectId: remoteScope.object.objectId,\r\n                    functionDeclaration: extractor,\r\n                    arguments: [{\r\n                        value: index\r\n                    }],\r\n                    objectGroup: \"backtrace\"\r\n                }, (e) => {\r\n                    error = e;\r\n                });\r\n\r\n                if (error !== null) {\r\n                    throw error;\r\n                }\r\n\r\n                scopes = context.scopes;\r\n            }\r\n\r\n            session.post('Runtime.callFunctionOn', {\r\n                objectId: this.frame.this.objectId,\r\n                functionDeclaration: `\r\n                        function copy() {\r\n                          process.__rookout_backchannel.get(${index}).this = this;\r\n                         }\r\n                        `,\r\n                objectGroup: \"backtrace\"\r\n            });\r\n\r\n            let _this = process.__rookout_backchannel.get(index).this;\r\n\r\n            if (_this === global) {\r\n                _this = undefined;\r\n            }\r\n\r\n            this.this = _this;\r\n        } finally {\r\n            process.__rookout_backchannel.delete(index);\r\n            this.scopes = scopes;\r\n        }\r\n\r\n        return this.scopes;\r\n    }\r\n}\r\n"],"file":"InspectorFrameNamespace.js"}