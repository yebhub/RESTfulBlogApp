{"version":3,"sources":["../../../../src/processor/namespaces/InspectorStackNamespace.js"],"names":["DEFAULT_TRACEBACK_LIMIT","DEFAULT_FRAMES_LIMIT","InspectorStackNamespace","Namespace","constructor","inspector","callFrames","readKey","key","InspectorFrameNamespace","callMethod","name","args","traceback","frames","depth","parseInt","length","InspectorTracebackNamespace","result","i","frame","push","ListNamespace"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AAEA;;;;AAEA,MAAMA,uBAAuB,GAAG,IAAhC;AACA,MAAMC,oBAAoB,GAAG,GAA7B,C,CAEA;;AACe,MAAMC,uBAAN,SAAsCC,kBAAtC,CAAgD;AAE3DC,EAAAA,WAAW,CAACC,SAAD,EAAYC,UAAZ,EAAwB;AAC/B;AAEA,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACH;;AAEDC,EAAAA,OAAO,CAACC,GAAD,EAAM;AACT,WAAO,IAAIC,gCAAJ,CAA4B,KAAKJ,SAAjC,EAA4C,KAAKC,UAAL,CAAgBE,GAAhB,CAA5C,CAAP;AACH;;AAEDE,EAAAA,UAAU,CAACC,IAAD,EAAOC,IAAP,EAAa;AACnB,YAAQD,IAAR;AACI,WAAK,WAAL;AACI,eAAO,KAAKE,SAAL,CAAeD,IAAf,CAAP;;AACJ,WAAK,QAAL;AACI,eAAO,KAAKE,MAAL,CAAYF,IAAZ,CAAP;;AACJ;AACI,eAAO,MAAMF,UAAN,CAAiBC,IAAjB,EAAuBC,IAAvB,CAAP;AANR;AAQH;;AAEDC,EAAAA,SAAS,CAACD,IAAD,EAAO;AACZ;AACA,QAAIG,KAAK,GAAGf,uBAAZ;;AACA,QAAI,QAAQY,IAAR,IAAgB,OAAOA,IAA3B,EAAiC;AAC7BG,MAAAA,KAAK,GAAGC,QAAQ,CAACJ,IAAD,CAAhB;AACH;;AACD,QAAIG,KAAK,GAAG,KAAKT,UAAL,CAAgBW,MAA5B,EAAoC;AAChCF,MAAAA,KAAK,GAAG,KAAKT,UAAL,CAAgBW,MAAxB;AACH;;AAED,WAAO,IAAIC,wDAAJ,CAAgC,KAAKb,SAArC,EAAgD,KAAKC,UAArD,EAAiES,KAAjE,CAAP;AACH;;AAEDD,EAAAA,MAAM,CAACF,IAAD,EAAO;AACT;AACA,QAAIG,KAAK,GAAGd,oBAAZ;;AACA,QAAI,QAAQW,IAAR,IAAgB,OAAOA,IAA3B,EAAiC;AAC7BG,MAAAA,KAAK,GAAGC,QAAQ,CAACJ,IAAD,CAAhB;AACH;;AACD,QAAIG,KAAK,GAAG,KAAKT,UAAL,CAAgBW,MAA5B,EAAoC;AAChCF,MAAAA,KAAK,GAAG,KAAKT,UAAL,CAAgBW,MAAxB;AACH;;AAED,QAAIE,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAApB,EAA2B,EAAEK,CAA7B,EAAgC;AAC5B,UAAIC,KAAK,GAAG,IAAIZ,gCAAJ,CAA4B,KAAKJ,SAAjC,EAA4C,KAAKC,UAAL,CAAgBc,CAAhB,CAA5C,CAAZ;AAEAD,MAAAA,MAAM,CAACG,IAAP,CAAYD,KAAK,CAACX,UAAN,CAAiB,MAAjB,CAAZ;AACH;;AAED,WAAO,IAAIa,sBAAJ,CAAkBJ,MAAlB,CAAP;AACH;;AAvD0D","sourcesContent":["\r\nimport Namespace from \"./Namespace\";\r\nimport ListNamespace from \"./ListNamespace\";\r\nimport InspectorFrameNamespace from \"./InspectorFrameNamespace\";\r\n\r\nimport {InspectorTracebackNamespace} from \"./InspectorTracebackNamespace\";\r\n\r\nconst DEFAULT_TRACEBACK_LIMIT = 1000;\r\nconst DEFAULT_FRAMES_LIMIT = 100;\r\n\r\n// Note - this is a serious duplication of the V8StackNamespace\r\nexport default class InspectorStackNamespace extends Namespace {\r\n\r\n    constructor(inspector, callFrames) {\r\n        super();\r\n\r\n        this.inspector = inspector;\r\n        this.callFrames = callFrames;\r\n    }\r\n\r\n    readKey(key) {\r\n        return new InspectorFrameNamespace(this.inspector, this.callFrames[key]);\r\n    }\r\n\r\n    callMethod(name, args) {\r\n        switch (name) {\r\n            case \"traceback\":\r\n                return this.traceback(args);\r\n            case \"frames\":\r\n                return this.frames(args);\r\n            default:\r\n                return super.callMethod(name, args);\r\n        }\r\n    }\r\n\r\n    traceback(args) {\r\n        // Decide on dump depth\r\n        let depth = DEFAULT_TRACEBACK_LIMIT;\r\n        if (null != args && '' !== args) {\r\n            depth = parseInt(args);\r\n        }\r\n        if (depth > this.callFrames.length) {\r\n            depth = this.callFrames.length;\r\n        }\r\n\r\n        return new InspectorTracebackNamespace(this.inspector, this.callFrames, depth);\r\n    }\r\n\r\n    frames(args) {\r\n        // Decide on dump depth\r\n        let depth = DEFAULT_FRAMES_LIMIT;\r\n        if (null != args && '' !== args) {\r\n            depth = parseInt(args);\r\n        }\r\n        if (depth > this.callFrames.length) {\r\n            depth = this.callFrames.length;\r\n        }\r\n\r\n        let result = [];\r\n        for (let i = 0; i < depth; ++i) {\r\n            let frame = new InspectorFrameNamespace(this.inspector, this.callFrames[i]);\r\n\r\n            result.push(frame.callMethod('dump'));\r\n        }\r\n\r\n        return new ListNamespace(result);\r\n    }\r\n\r\n}\r\n"],"file":"InspectorStackNamespace.js"}