{"version":3,"sources":["../../../src/services/MemoryUsageLogService.js"],"names":["config","require","fs","util","v8","log_fd","MemoryUsageLogService","constructor","memoryUsageInterval","start","log_file_path","LOG_FILE","openSync","e","console","log","format","TRACE_GC_ENABLED","enableGCTrace","logMemoryUsageInterval","setInterval","logMemoryUsage","INTERVAL_SECONDS","unref","close","disableGCTrace","clearInterval","closeSync","virtualMemory","process","memoryUsage","heapStatistics","getHeapStatistics","writeSyncOptions","encoding","flag","mode","writeFileSync","JSON","stringify","logger","info","setFlagsFromString"],"mappings":";;;;;;;AACA;;AADA,MAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAII,MAAM,GAAG,IAAb;;AAGO,MAAMC,qBAAN,CAA4B;AAC/BC,EAAAA,WAAW,GAAG;AACV,SAAKC,mBAAL,GAA2B,IAA3B;AACH;;AAEDC,EAAAA,KAAK,GAAG;AACJ,QAAI,KAAKD,mBAAT,EAA8B;AAC1B;AACH;;AAED,QAAIE,aAAa,GAAGV,MAAM,CAACM,qBAAP,CAA6BK,QAAjD;;AACA,QAAID,aAAa,KAAK,IAAtB,EAA4B;AACxB,UAAI;AACAL,QAAAA,MAAM,GAAGH,EAAE,CAACU,QAAH,CAAYF,aAAZ,EAA2B,GAA3B,CAAT;AACH,OAFD,CAGA,OAAOG,CAAP,EAAU;AACNC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACa,MAAL,CAAY,iFAAZ,EAA+FN,aAA/F,EAA8GG,CAA9G,CAAZ;AACA;AACH;AACJ;;AAED,QAAIb,MAAM,CAACM,qBAAP,CAA6BW,gBAAjC,EAAmD;AAC/C,WAAKC,aAAL;AAEH;;AAED,SAAKC,sBAAL,GAA8BC,WAAW,CAAC,KAAKC,cAAN,EAAsBrB,MAAM,CAACM,qBAAP,CAA6BgB,gBAA7B,GAAgD,IAAtE,CAAX,CAAuFC,KAAvF,EAA9B;AACH;;AAEDC,EAAAA,KAAK,GAAG;AACJ,QAAIxB,MAAM,CAACM,qBAAP,CAA6BW,gBAAjC,EAAmD;AAC/C,WAAKQ,cAAL;AACH;;AAEDC,IAAAA,aAAa,CAAC,KAAKP,sBAAN,CAAb;AACA,SAAKA,sBAAL,GAA8B,IAA9B;;AAEA,QAAId,MAAM,KAAK,IAAf,EAAqB;AACjBH,MAAAA,EAAE,CAACyB,SAAH,CAAatB,MAAb;AACAA,MAAAA,MAAM,GAAG,IAAT;AACH;AACJ;;AAEDgB,EAAAA,cAAc,GAAG;AACb,QAAIO,aAAa,GAAGC,OAAO,CAACC,WAAR,EAApB;AACA,QAAIC,cAAc,GAAG3B,EAAE,CAAC4B,iBAAH,EAArB;;AAEA,QAAI3B,MAAM,KAAK,IAAf,EAAqB;AACjB,UAAI4B,gBAAgB,GAAG;AAACC,QAAAA,QAAQ,EAAE,MAAX;AAAmBC,QAAAA,IAAI,EAAE,GAAzB;AAA8BC,QAAAA,IAAI,EAAE;AAApC,OAAvB;AACAlC,MAAAA,EAAE,CAACmC,aAAH,CAAiBhC,MAAjB,EAAyB,mBAAmBiC,IAAI,CAACC,SAAL,CAAeX,aAAf,CAAnB,GAAmD,IAA5E,EAAkFK,gBAAlF;AACA/B,MAAAA,EAAE,CAACmC,aAAH,CAAiBhC,MAAjB,EAAyB,sBAAsBiC,IAAI,CAACC,SAAL,CAAeR,cAAf,CAAtB,GAAuD,IAAhF,EAAsFE,gBAAtF;AACH,KAJD,MAKK;AACDO,qBAAOC,IAAP,CAAY,mBAAmBH,IAAI,CAACC,SAAL,CAAeX,aAAf,CAA/B;;AACAY,qBAAOC,IAAP,CAAY,sBAAsBH,IAAI,CAACC,SAAL,CAAeR,cAAf,CAAlC;AACH;AACJ;;AAEDb,EAAAA,aAAa,GAAG;AACZd,IAAAA,EAAE,CAACsC,kBAAH,CAAsB,YAAtB;AACH;;AAEDjB,EAAAA,cAAc,GAAG;AACbrB,IAAAA,EAAE,CAACsC,kBAAH,CAAsB,cAAtB;AACH;;AAhE8B","sourcesContent":["const config = require('../config');\r\nimport {logger} from \"../logger\";\r\nconst fs = require('fs');\r\nconst util = require('util');\r\nconst v8 = require('v8');\r\n\r\nlet log_fd = null;\r\n\r\n\r\nexport class MemoryUsageLogService {\r\n    constructor() {\r\n        this.memoryUsageInterval = null;\r\n    }\r\n\r\n    start() {\r\n        if (this.memoryUsageInterval) {\r\n            return;\r\n        }\r\n\r\n        let log_file_path = config.MemoryUsageLogService.LOG_FILE;\r\n        if (log_file_path !== null) {\r\n            try {\r\n                log_fd = fs.openSync(log_file_path, 'a');\r\n            }\r\n            catch (e) {\r\n                console.log(util.format('Rookout - Error while trying to open a memory usage log file, file: %s, err: %s', log_file_path, e));\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (config.MemoryUsageLogService.TRACE_GC_ENABLED) {\r\n            this.enableGCTrace();\r\n\r\n        }\r\n\r\n        this.logMemoryUsageInterval = setInterval(this.logMemoryUsage, config.MemoryUsageLogService.INTERVAL_SECONDS * 1000).unref();\r\n    }\r\n\r\n    close() {\r\n        if (config.MemoryUsageLogService.TRACE_GC_ENABLED) {\r\n            this.disableGCTrace();\r\n        }\r\n\r\n        clearInterval(this.logMemoryUsageInterval);\r\n        this.logMemoryUsageInterval = null;\r\n\r\n        if (log_fd !== null) {\r\n            fs.closeSync(log_fd);\r\n            log_fd = null;\r\n        }\r\n    }\r\n\r\n    logMemoryUsage() {\r\n        let virtualMemory = process.memoryUsage();\r\n        let heapStatistics = v8.getHeapStatistics();\r\n\r\n        if (log_fd !== null) {\r\n            let writeSyncOptions = {encoding: \"utf8\", flag: \"a\", mode: 0o666};\r\n            fs.writeFileSync(log_fd, \"Memory usage: \" + JSON.stringify(virtualMemory) + \"\\n\", writeSyncOptions);\r\n            fs.writeFileSync(log_fd, \"Heap statistics: \" + JSON.stringify(heapStatistics) + \"\\n\", writeSyncOptions);\r\n        }\r\n        else {\r\n            logger.info(\"Memory usage: \" + JSON.stringify(virtualMemory));\r\n            logger.info(\"Heap statistics: \" + JSON.stringify(heapStatistics));\r\n        }\r\n    }\r\n\r\n    enableGCTrace() {\r\n        v8.setFlagsFromString('--trace_gc');\r\n    }\r\n\r\n    disableGCTrace() {\r\n        v8.setFlagsFromString('--notrace_gc')\r\n    }\r\n\r\n}\r\n"],"file":"MemoryUsageLogService.js"}