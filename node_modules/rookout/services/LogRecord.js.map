{"version":3,"sources":["../../../src/services/LogRecord.js"],"names":["LogModules","Object","freeze","CONSOLE","WINSTON2","WINSTON3","LOG_RECORD_MESSAGE_FIELD_NAME","LOG_RECORD_LEVEL_NAME_FIELD_NAME","LogRecord","constructor","record","module","unparsedLevelName","level","levelname","unparsedMessage","message","msg","time","created","getLevelName","formatLevelName","toUpperCase","getMessage","formatMessage","getFormattedConsoleLogMessage","getFormattedWinstonLogMessage","map","obj","name","JSON","stringify","join"],"mappings":";;;;;;AACO,MAAMA,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc;AACpCC,EAAAA,OAAO,EAAE,SAD2B;AAEpCC,EAAAA,QAAQ,EAAE,UAF0B;AAGpCC,EAAAA,QAAQ,EAAE;AAH0B,CAAd,CAAnB;;AAMA,MAAMC,6BAA6B,GAAG,KAAtC;;AACA,MAAMC,gCAAgC,GAAG,WAAzC;;;AAEA,MAAMC,SAAN,CAAgB;AAEnBC,EAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;AACxB,SAAKC,iBAAL,GAAyBF,MAAM,CAACG,KAAhC;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,eAAL,GAAuBL,MAAM,CAACM,OAA9B;AACA,SAAKC,GAAL,GAAW,IAAX;AACA,SAAKC,IAAL,GAAYR,MAAM,CAACS,OAAnB;AACA,SAAKR,MAAL,GAAcA,MAAd;AACH;;AAEDS,EAAAA,YAAY,GAAG;AACX,SAAKC,eAAL;AAEA,WAAO,KAAKP,SAAZ;AACH;;AAEDO,EAAAA,eAAe,GAAG;AACd,QAAI,KAAKP,SAAL,KAAmB,IAAvB,EAA6B;AACzB,WAAKA,SAAL,GAAiB,KAAKF,iBAAL,CAAuBU,WAAvB,EAAjB;AACH;AACJ;;AAEDC,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKN,GAAL,KAAa,IAAjB,EAAuB;AACnB,WAAKO,aAAL;AACH;;AAED,WAAO,KAAKP,GAAZ;AACH;;AAEDO,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKP,GAAL,KAAa,IAAjB,EAAuB;AACnB;AACH;;AAED,YAAQ,KAAKN,MAAb;AACI,WAAKX,UAAU,CAACG,OAAhB;AACI,aAAKc,GAAL,GAAW,KAAKQ,6BAAL,CAAmC,KAAKV,eAAxC,CAAX;AACA;;AACJ,WAAKf,UAAU,CAACI,QAAhB;AACA,WAAKJ,UAAU,CAACK,QAAhB;AACI,aAAKY,GAAL,GAAW,KAAKS,6BAAL,CAAmC,KAAKX,eAAxC,CAAX;AACA;;AACJ;AACI;AATR;AAWH;;AAEDU,EAAAA,6BAA6B,CAACT,OAAD,EAAU;AACnC,WAAOA,OAAO,CAACW,GAAR,CAAaC,GAAD,IAAS;AACxB,UAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,YAAIA,GAAG,CAACnB,WAAJ,CAAgBoB,IAAhB,KAAyB,QAA7B,EAAuC;AACnC,iBAAQ,GAAED,GAAG,CAACnB,WAAJ,CAAgBoB,IAAK,IAAGC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAAoB,EAAtD;AACH;;AAED,eAAOE,IAAI,CAACC,SAAL,CAAeH,GAAf,CAAP;AACH;;AAED,aAAOA,GAAP;AACH,KAVM,EAUJI,IAVI,CAUC,GAVD,CAAP;AAWH;;AAEDN,EAAAA,6BAA6B,CAACV,OAAD,EAAU;AACnC,WAAOA,OAAP;AACH;;AAjEkB","sourcesContent":["\nexport const LogModules = Object.freeze({\n    CONSOLE: \"CONSOLE\",\n    WINSTON2: \"WINSTON2\",\n    WINSTON3: \"WINSTON3\"\n});\n\nexport const LOG_RECORD_MESSAGE_FIELD_NAME = \"msg\";\nexport const LOG_RECORD_LEVEL_NAME_FIELD_NAME = \"levelname\";\n\nexport class LogRecord {\n\n    constructor(record, module) {\n        this.unparsedLevelName = record.level;\n        this.levelname = null;\n        this.unparsedMessage = record.message;\n        this.msg = null;\n        this.time = record.created;\n        this.module = module;        \n    }\n\n    getLevelName() {\n        this.formatLevelName();\n\n        return this.levelname;\n    }\n\n    formatLevelName() {\n        if (this.levelname === null) {\n            this.levelname = this.unparsedLevelName.toUpperCase();\n        }\n    }\n\n    getMessage() {\n        if (this.msg === null) {\n            this.formatMessage();\n        }\n\n        return this.msg;\n    }\n\n    formatMessage() {\n        if (this.msg !== null) {\n            return;\n        }\n\n        switch (this.module) {\n            case LogModules.CONSOLE:\n                this.msg = this.getFormattedConsoleLogMessage(this.unparsedMessage);\n                break;\n            case LogModules.WINSTON2:\n            case LogModules.WINSTON3:\n                this.msg = this.getFormattedWinstonLogMessage(this.unparsedMessage);\n                break;\n            default:\n                break;\n        }\n    }\n\n    getFormattedConsoleLogMessage(message) {\n        return message.map((obj) => {\n            if (typeof obj === \"object\") {\n                if (obj.constructor.name !== \"Object\") {\n                    return `${obj.constructor.name} ${JSON.stringify(obj)}`;\n                }\n\n                return JSON.stringify(obj);\n            }\n\n            return obj;\n        }).join(\" \");\n    }\n\n    getFormattedWinstonLogMessage(message) {\n        return message;\n    }\n}"],"file":"LogRecord.js"}