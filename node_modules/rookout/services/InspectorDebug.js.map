{"version":3,"sources":["../../../src/services/InspectorDebug.js"],"names":["inspector","require","url","path","LRU","config","InspectorDebug","constructor","userLine","scriptLoaded","getScript","dbgService","isElectron","verifyInspectFlagEnabledUnderElectron","verifyNoDebuggerConnected","getScriptCallback","positionsToBreakpoints","breakpointsToPositions","loadedScriptsCount","loadedScriptsSize","cache","max","paused","startSession","session","Session","connect","e","RookInspectorConnectFailed","on","params","permanently_closed","scriptURL","startsWith","fileURLToPath","undefined","shouldSkipScript","shouldCountScript","validate_version","length","InstrumentationConfig","MAX_SCRIPTS_COUNT_FAIL_SAFE","MAX_SCRIPTS_SIZE_FAIL_SAFE","logger","warn","close","then","catch","error","post","scriptId","err","scriptSource","exception","objectGroup","message","pos","hitBreakpoints","JSON","stringify","InspectorStackNamespace","callFrames","async_post","maxScriptsCacheSize","maxDepth","active","cleanupAsyncCallStackInterval","setInterval","debug","CLEANUP_ASYNC_CALLSTACK_INTERVAL_MILLISECONDS","unref","clearCleanupAsyncCallStackInterval","clearInterval","heapDump","dumpPath","filename","fs","existsSync","fd","openSync","m","writeSync","chunk","r","console","log","closeSync","RookOtherDebuggerConnected","processArguments","process","argv","toString","includes","RookElectronInspectFlagNotSet","setBreak","key","result","pathToFileURL","lineNumber","lineno","columnNumber","column","response","RookInspectorSetBreakpointFailed","breakpointId","clearBreak","clearAllBreaks","positions","Object","keys","map","position","message_id","cb","myCb","args","Error","Promise","resolve","reject","resolvePosition","frame","cacheKey","location","get","script","rawFilename","basename","rawPosition","line","function","functionName","mapConsumer","originalPosition","getOriginalPosition","source","name","String","set","disconnect","major","minor","patch","runtimeMajorV","runtimeMinorV","runtimePatchV","version","substr","split","parseInt"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst inspector = require('inspector');\r\nconst url = require('url');\r\nconst path = require(\"path\");\r\nconst LRU = require(\"lru-cache\");\r\n\r\nimport {logger} from \"../logger\";\r\n\r\nimport {\r\n    RookInspectorSetBreakpointFailed,\r\n    RookInspectorConnectFailed,\r\n    RookElectronInspectFlagNotSet, RookOtherDebuggerConnected\r\n} from '../exceptions'\r\n\r\nimport {isBlackListedModule} from \"./IgnoredNodeModules\";\r\n\r\nimport InspectorFrameNamespace from \"../processor/namespaces/InspectorFrameNamespace\";\r\nimport InspectorStackNamespace from \"../processor/namespaces/InspectorStackNamespace\";\r\nconst config = require(\"../config\");\r\n\r\nexport class InspectorDebug {\r\n    constructor(userLine, scriptLoaded, getScript, dbgService) {\r\n        if (InspectorDebug.isElectron()) {\r\n            InspectorDebug.verifyInspectFlagEnabledUnderElectron();\r\n        } else {\r\n            // Setting the --inspect CLI flag means the inspector will be active, so we can't\r\n            // run this verification in that case.\r\n            InspectorDebug.verifyNoDebuggerConnected();\r\n        }\r\n\r\n        this.getScriptCallback = getScript;\r\n        this.userLine = userLine;\r\n        this.scriptLoaded = scriptLoaded;\r\n        this.dbgService = dbgService;\r\n\r\n        this.positionsToBreakpoints = {};\r\n        this.breakpointsToPositions = {};\r\n        this.loadedScriptsCount = 0;\r\n        this.loadedScriptsSize = 0;\r\n\r\n        this.cache = new LRU({max: 2500});\r\n\r\n        this.paused = false;\r\n\r\n        this.startSession();\r\n    }\r\n\r\n    async startSession() {\r\n        this.session = new inspector.Session();\r\n\r\n        try {\r\n            this.session.connect();\r\n        } catch (e) {\r\n            throw new RookInspectorConnectFailed(e);\r\n        }\r\n\r\n        this.session.on('Debugger.scriptParsed', ({ params }) => {\r\n            if (this.session === null || !this.dbgService || this.dbgService.permanently_closed) {\r\n                return;\r\n            }\r\n            try {\r\n                let scriptURL = params.url;\r\n\r\n                // URLs instead of paths started in 10.12 which also introduced this\r\n                // url.fileURLToPath. We assume we will not receive URLs before 10.12\r\n                if (scriptURL.startsWith(\"file:\") && url.fileURLToPath !== undefined) {\r\n                    scriptURL = url.fileURLToPath(scriptURL);\r\n                }\r\n                let shouldSkipScript = false;\r\n                let shouldCountScript = true;\r\n                if ((scriptURL === \"\") || isBlackListedModule(scriptURL)) {\r\n                    if (this.validate_version(12, 5)) {\r\n                        shouldCountScript = false;\r\n                    }\r\n                    shouldSkipScript = true;\r\n                }\r\n                if (shouldCountScript) {\r\n                    this.loadedScriptsCount++;\r\n\r\n                    if (!this.validate_version(12, 5)) {\r\n                        this.loadedScriptsSize += params.length;\r\n                    }\r\n                }\r\n\r\n                if (this.loadedScriptsCount > config.InstrumentationConfig.MAX_SCRIPTS_COUNT_FAIL_SAFE\r\n                    || this.loadedScriptsSize > config.InstrumentationConfig.MAX_SCRIPTS_SIZE_FAIL_SAFE) {\r\n                    logger.warn(`An unsafe number of scripts loaded - stopping agent, ${this.loadedScriptsCount} were loaded, with size of ${this.loadedScriptsSize} bytes. The last script we got was ${params.url}`);\r\n                    this.dbgService.close(true).then(() => logger.warn('Closed the debugger')).catch(() => logger.error(\"Failed to close debugger\"));\r\n                    return;\r\n                }\r\n\r\n                if (shouldSkipScript) {\r\n                    return;\r\n                }\r\n\r\n                this.post('Debugger.getScriptSource', {scriptId: params.scriptId}, (err, scriptSource) => {\r\n                    if (err) {\r\n                        logger.exception(\"Failed to get script source\", err);\r\n                        return;\r\n                    }\r\n\r\n                    try {\r\n                        this.scriptLoaded(params.scriptId, scriptURL, scriptSource.scriptSource);\r\n                    } catch (error) {\r\n                        logger.exception(\"Exception when processing script source callback\", error);\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                logger.exception(\"Exception when processing script parse callback\", error);\r\n            } finally {\r\n                if (!this.paused) {\r\n                    this.post(\"Runtime.releaseObjectGroup\", {objectGroup: \"backtrace\"});\r\n                }\r\n            }\r\n        });\r\n\r\n        this.session.on('Debugger.scriptFailedToParse', ({\r\n            params\r\n          }) => {\r\n            if (this.paused || this.session === null || !this.dbgService || this.dbgService.permanently_closed) {\r\n                return;\r\n            }\r\n            this.post(\"Runtime.releaseObjectGroup\", {objectGroup: \"backtrace\"});\r\n        });\r\n\r\n        this.session.on('Debugger.paused', (message) => {\r\n            if (this.session === null) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                this.paused = true;\r\n                const pos = this.breakpointsToPositions[message.params.hitBreakpoints[0]];\r\n                if (!pos) {\r\n                    logger.error(`Aug not found! ${JSON.stringify(message.params)}`);\r\n                } else {\r\n                    this.userLine(pos, new InspectorStackNamespace(this, message.params.callFrames));\r\n                }\r\n            } catch (error) {\r\n                logger.exception(error);\r\n            } finally {\r\n                this.paused = false;\r\n                this.post(\"Debugger.resume\");\r\n            }\r\n        });\r\n\r\n        this.session.on('error', (error) => {\r\n            try {\r\n                logger.exception('InspectorDebugger error', error);\r\n            } catch (e) {\r\n\r\n            }\r\n        });\r\n\r\n        if (this.validate_version(12, 9)) {\r\n            // Not allowing the debugger to collect scripts, only available in 12.9.0V\r\n            await this.async_post('Debugger.enable', {maxScriptsCacheSize: 2});\r\n        }\r\n        else {\r\n            await this.async_post('Debugger.enable');\r\n        }\r\n        await this.async_post('Debugger.setAsyncCallStackDepth', {maxDepth: 1});\r\n        await this.async_post('Debugger.setBreakpointsActive', {active: true});\r\n\r\n        if (this.validate_version(14)) {\r\n            this.cleanupAsyncCallStackInterval = setInterval(() => {\r\n                try {\r\n                    this.post('Debugger.setAsyncCallStackDepth', {maxDepth: 0});\r\n                    this.post('Debugger.setAsyncCallStackDepth', {maxDepth: 1});\r\n                }\r\n                catch (err){\r\n                    logger.debug(`cleanupAsyncCallStack error: ${err}`);\r\n                }\r\n            }, config.InstrumentationConfig.CLEANUP_ASYNC_CALLSTACK_INTERVAL_MILLISECONDS).unref();\r\n        }\r\n        \r\n    }\r\n\r\n    clearCleanupAsyncCallStackInterval() {\r\n        if (this.cleanupAsyncCallStackInterval) {\r\n            clearInterval(this.cleanupAsyncCallStackInterval);\r\n            this.cleanupAsyncCallStackInterval = null;\r\n        }\r\n    }\r\n\r\n    heapDump(dumpPath,filename) {\r\n        logger.debug('heapDumping');         \r\n        try {\r\n            const fs = require('fs');        \r\n            if (!fs.existsSync(dumpPath)) {\r\n                logger.error(`heapdump: path doesnt exist + ${dumpPath}`);\r\n            }\r\n            const fd = fs.openSync(dumpPath + filename, 'w');\r\n            if (this.session === null) {\r\n                logger.error(`heapdump: no inspector session`);\r\n                return;\r\n            }\r\n\r\n            this.session.on('HeapProfiler.addHeapSnapshotChunk', (m) => {\r\n                fs.writeSync(fd, m.params.chunk);\r\n            });\r\n\r\n            this.session.post('HeapProfiler.takeHeapSnapshot', null, (err, r) => {\r\n                console.log('HeapProfiler.takeHeapSnapshot done:', err, r);            \r\n                fs.closeSync(fd);\r\n            });\r\n        } catch (e) {\r\n            logger.error('Failed heapdump', e);\r\n        }\r\n    }\r\n    static verifyNoDebuggerConnected() {\r\n        // inspector.url doesn't exist in node.js v8.0.0 - it was added in v8.1.0\r\n        // (although the docs would have you believe it's support in v8.x)\r\n        if (inspector.url !== undefined && inspector.url() !== undefined) {\r\n            throw new RookOtherDebuggerConnected();\r\n        }\r\n    }\r\n\r\n    //NOTE:: if inspect is not specified under electron, inspector api will fail to load\r\n    //NOTE:: its important that this function will happen here and not in the InspectorDebug\r\n    //          since we actually want to fail if inspect is not specified\r\n    static verifyInspectFlagEnabledUnderElectron() {\r\n        let processArguments = process.argv.toString();\r\n        if (!processArguments.includes('--inspect')) {\r\n            throw new RookElectronInspectFlagNotSet();\r\n        }\r\n    }\r\n\r\n    static isElectron() {\r\n        return process.argv.toString().includes('electron');\r\n    }\r\n\r\n    setBreak(pos) {\r\n        // If we already have a breakpoint on that line, we don't do anything\r\n        if (undefined !== this.positionsToBreakpoints[pos.key]) {\r\n            return;\r\n        }\r\n\r\n        let result = {};\r\n\r\n        let scriptURL = pos.filename;\r\n        if (url.pathToFileURL !== undefined) {\r\n            scriptURL = url.pathToFileURL(scriptURL);\r\n        }\r\n\r\n        const lineNumber = pos.lineno - 1;\r\n        const columnNumber = (pos.column ? pos.column - 1 : 0);\r\n        logger.debug(`setBreakpointByUrl ${scriptURL}:${lineNumber}:${columnNumber}`);\r\n\r\n        // While this function call looks async, in reality the callback will be called before it returns,\r\n        // so we simplify the code\r\n        this.post(\r\n            'Debugger.setBreakpointByUrl', {\r\n                url: scriptURL,\r\n                lineNumber,\r\n                columnNumber\r\n            },\r\n            (error, response) => {\r\n                result.error = error;\r\n                result.response = response;\r\n        });\r\n\r\n        if (null != result.error) {\r\n            throw new RookInspectorSetBreakpointFailed(result.error);\r\n        }\r\n\r\n        this.positionsToBreakpoints[pos.key] = result.response.breakpointId;\r\n        this.breakpointsToPositions[result.response.breakpointId] = pos;\r\n    }\r\n\r\n    clearBreak(pos) {\r\n        // If we have an object, hash it\r\n        if (pos.key) {\r\n            pos = pos.key;\r\n        }\r\n\r\n        const breakpointId = this.positionsToBreakpoints[pos];\r\n        if (undefined === breakpointId) {\r\n            return;\r\n        }\r\n\r\n        delete this.positionsToBreakpoints[pos];\r\n        delete this.breakpointsToPositions[breakpointId];\r\n\r\n        let result = {};\r\n        this.post(\r\n          'Debugger.removeBreakpoint', {breakpointId: breakpointId}, (error) => {\r\n              result.error = error;\r\n          }\r\n        );\r\n\r\n        if (null != result.error) {\r\n            logger.error(\"Failed to remove breakpoint\", result.error);\r\n        }\r\n    }\r\n\r\n    async clearAllBreaks() {\r\n        let positions = Object.keys(this.positionsToBreakpoints);\r\n\r\n        positions.map(position => this.clearBreak(position));\r\n\r\n        this.positionsToBreakpoints = {};\r\n        this.breakpointsToPositions = {};\r\n    }\r\n\r\n    post(message_id, params, cb) {\r\n        const myCb = (...args) => {\r\n            if (cb !== undefined) {\r\n                cb(...args);\r\n            }\r\n        }\r\n\r\n        if (this.session === null) {\r\n            if (cb !== undefined) {\r\n                cb(new Error(\"No debug session\"), null);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.session.post(message_id, params, myCb);\r\n    }\r\n\r\n    async_post(message_id, params) {\r\n        return new Promise((resolve, reject) => {\r\n            this.post(message_id, params, (err, ...args) => {\r\n                if (err) {\r\n                    reject(err);\r\n                } else {\r\n                    resolve(args);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    getScript(scriptId) {\r\n        return this.getScriptCallback(scriptId);\r\n    }\r\n\r\n    // TODO - this code can be moved to ScriptNotifier\r\n    resolvePosition(frame) {\r\n        // Check cache before resolving source maps and stuff\r\n        const cacheKey = `${frame.location.scriptId}:${frame.location.lineNumber}:${frame.location.columnNumber}`;\r\n        let position = this.cache.get(cacheKey);\r\n        if (position !== undefined) {\r\n            return position;\r\n        }\r\n\r\n        const script = this.getScript(frame.location.scriptId);\r\n\r\n        let rawFilename = null;\r\n        if (script !== null) {\r\n            rawFilename = script.filename;\r\n        } else {\r\n            if (frame.url !== undefined) {\r\n                rawFilename = path.basename(frame.url);\r\n            }\r\n        }\r\n\r\n        const rawPosition = {\r\n            filename: rawFilename,\r\n            line: frame.location.lineNumber + 1,\r\n            column: frame.location.columnNumber + 1,\r\n            function: frame.functionName\r\n        };\r\n\r\n        if (null !== script && null !== script.mapConsumer) {\r\n            let originalPosition = script.getOriginalPosition(rawPosition.line, rawPosition.column);\r\n            if (null != originalPosition) {\r\n                // In case of bad mapping we skip the resolve.\r\n                if (originalPosition.line !== null) {\r\n                    position = {\r\n                        filename: originalPosition.source,\r\n                        line: originalPosition.line,\r\n                        column: originalPosition.column,\r\n                        function: rawPosition.function\r\n                    };\r\n\r\n                    if (position.function === '' &&\r\n                        (typeof originalPosition.name === 'string' || originalPosition.name instanceof String)) {\r\n                        position.function = originalPosition.name;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If we have been unable to get original position, just use raw position\r\n        if (null == position) {\r\n            position = rawPosition;\r\n        }\r\n\r\n        if (position.function === '') {\r\n            position.function = 'anonymous';\r\n        }\r\n\r\n        // Update cache\r\n        this.cache.set(cacheKey, position);\r\n        return position;\r\n    }\r\n\r\n    async close() {\r\n        if (this.session) {\r\n\r\n            this.clearCleanupAsyncCallStackInterval();\r\n\r\n            await this.clearAllBreaks();\r\n\r\n            await this.async_post('Debugger.setBreakpointsActive', { active: false });\r\n            await this.async_post('Debugger.disable');\r\n            try {\r\n                await this.async_post('Debugger.resume'); // just in case\r\n            } catch(e) {}\r\n            this.session.disconnect();\r\n            this.session = null;\r\n        }\r\n    }\r\n\r\n    validate_version(major, minor=0, patch=0) {\r\n        /**\r\n         * Validate the current runtime version is above or equal to the given version\r\n         * @param {int} major The major of the checking version\r\n         * @param {int} minor The minor of the checking version\r\n         * @param {int} patch The patch of the checking version\r\n         */\r\n\r\n        let [runtimeMajorV, runtimeMinorV, runtimePatchV] = process.version.substr(1).split('.');\r\n        runtimeMajorV = parseInt(runtimeMajorV);\r\n        runtimeMinorV = parseInt(runtimeMinorV);\r\n        runtimePatchV = parseInt(runtimePatchV);\r\n\r\n        return runtimeMajorV > major\r\n            || (runtimeMajorV === major\r\n                && (runtimeMinorV > minor\r\n                    || (runtimeMinorV === minor && runtimePatchV >= patch)));\r\n\r\n    }\r\n}\r\n"],"file":"InspectorDebug.js"}