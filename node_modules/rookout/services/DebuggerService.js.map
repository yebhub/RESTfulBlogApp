{"version":3,"sources":["../../../src/services/DebuggerService.js"],"names":["assert","require","path","config","Pos","constructor","filename","lineno","column","key","ScriptNotifier","pendingNotifications","scripts","getAllMatchInfoByNotification","notification","matchesInfos","scriptId","Object","keys","script","matchInfo","getMatchInfo","push","getScriptObjectById","hasOwnProperty","registerNotification","aug","fileHash","includeExternals","lineCrc32","lineUnique","callback","removed","augId","userWarnings","UserWarnings","execute","matchInfos","length","matchedFilename","getMatchedFilename","basename","sendWarning","RookError","RookSourceFilePathSuggestion","addScript","source","scriptWrapper","ScriptWrapper","removeAug","undefined","clearAugs","augIds","AugsHolder","debug","breakpoints","positions","setDebug","executeAugs","pos","stack","augs","logger","error","addAug","info","setBreak","setActive","removeAugTemporarily","duration","clearBreak","setTimeout","currentAugs","e","message","exception","uref","augsToKeep","augsToDelete","setRemoved","clearAllBreaks","isEmpty","DebuggerService","IService","augsHolder","scriptNotifier","closing","permanently_closed","closeTimeout","close","permanent","sendRuleStatus","RookDebuggerPermanentlyClosedException","start","notEqual","closeIfNeeded","finalizeCloseTimeout","getDebugger","HeapSnapshotConfiguration","HEAP_PATH","SIGNAL","process","on","date","Date","toISOString","heapDump","WAIT_SECONDS_TO_CLOSE_DEBUGGER_AFTER_NO_AUGS","unref","versions","version","split","major","parseInt","substr","RookUnsupportedNodeVersion","InspectorDebug","bind","clearTimeout"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nimport RookError from '../processor/RookError'\r\n\r\nconst assert = require('assert');\r\nconst path = require('path');\r\n\r\nimport {canonizeFileName} from \"../utils\";\r\nimport ScriptWrapper from \"./ScriptWrapper\";\r\nimport { RookSourceFilePathSuggestion, RookDebuggerPermanentlyClosedException } from '../exceptions';\r\n\r\nimport {logger} from \"../logger\";\r\nimport UserWarnings from '../UserWarnings';\r\nconst config = require('../config');\r\n\r\nimport {RookUnsupportedNodeVersion} from \"../exceptions\";\r\nimport {IService} from \"./IService\";\r\n\r\n// Note: this is a bit of a heck that is used by V8Debug as well\r\nclass Pos {\r\n\r\n    constructor(filename, lineno, column) {\r\n        this.filename = filename;\r\n        this.lineno = lineno;\r\n        this.column = column;\r\n\r\n        this.key = this.filename + \"@\" + this.lineno + \"@\" + this.column;\r\n    }\r\n}\r\n\r\nclass ScriptNotifier {\r\n\r\n    constructor() {\r\n        this.pendingNotifications = {};\r\n\r\n        this.scripts = {};\r\n    }\r\n\r\n    getAllMatchInfoByNotification(notification) {\r\n        let matchesInfos = [];\r\n        for (let scriptId of Object.keys(this.scripts)) {\r\n            const script = this.scripts[scriptId];\r\n            const matchInfo = script.getMatchInfo(notification);\r\n            if (null !== matchInfo) {\r\n                matchesInfos.push(matchInfo);\r\n            }\r\n        }\r\n\r\n        return matchesInfos;\r\n    }\r\n\r\n    getScriptObjectById(scriptId) {\r\n        if (this.scripts.hasOwnProperty(scriptId)) {\r\n            return this.scripts[scriptId];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registerNotification(aug, filename, fileHash, includeExternals, lineno, lineCrc32, lineUnique,  callback, removed) {\r\n        filename = canonizeFileName(filename);\r\n\r\n        this.pendingNotifications[aug.augId] = {\r\n            userWarnings: new UserWarnings(aug),\r\n            filename: filename,\r\n            includeExternals: includeExternals,\r\n            execute : callback,\r\n            removed : removed,\r\n            fileHash: fileHash,\r\n            lineno: lineno,\r\n            lineCrc32: lineCrc32,\r\n            lineUnique: lineUnique\r\n        };\r\n\r\n        const matchInfos = this.getAllMatchInfoByNotification(this.pendingNotifications[aug.augId]);\r\n        if (matchInfos.length > 0) {\r\n            for (let matchInfo of matchInfos) {\r\n                callback(matchInfo);\r\n            }\r\n        } else {\r\n            for (let scriptId of Object.keys(this.scripts)) {\r\n                // TODO - much of this logic is duplicated with \"standard\" scanning in ScriptWrapper and should be moved there\r\n                const script = this.scripts[scriptId];\r\n\r\n                let matchedFilename = script.getMatchedFilename(path.basename(filename), fileHash);\r\n\r\n                if (matchedFilename !== null) {\r\n                    aug.sendWarning(new RookError(new RookSourceFilePathSuggestion(filename, matchedFilename)));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addScript(scriptId, filename, source) {\r\n        if (null == filename || \"\" === filename || this.scripts.hasOwnProperty(scriptId)) {\r\n            return;\r\n        }\r\n\r\n        const scriptWrapper = new ScriptWrapper(scriptId, filename, source);\r\n\r\n        for (let augId of Object.keys(this.pendingNotifications)) {\r\n            let notification = this.pendingNotifications[augId];\r\n            const matchInfo = scriptWrapper.getMatchInfo(notification);\r\n            if (null !== matchInfo) {\r\n                notification.execute(matchInfo);\r\n            } else {\r\n                let matchedFilename = scriptWrapper.getMatchedFilename(path.basename(notification.filename), notification.fileHash);\r\n                if (matchedFilename !== null) {\r\n                    notification.userWarnings.sendWarning(new RookError(new RookSourceFilePathSuggestion(notification.filename, matchedFilename)));\r\n                }\r\n            }\r\n        }\r\n\r\n        this.scripts[scriptId] = scriptWrapper;\r\n    }\r\n\r\n    removeAug(augId) {\r\n        let notification = this.pendingNotifications[augId];\r\n        if (undefined !== notification) {\r\n            notification.removed();\r\n            delete this.pendingNotifications[augId];\r\n        }\r\n    }\r\n\r\n    clearAugs() {\r\n        let augIds = Object.keys(this.pendingNotifications);\r\n        for (let augId of augIds) {\r\n            this.removeAug(augId);\r\n        }\r\n\r\n        this.pendingNotifications = {};\r\n    }\r\n}\r\n\r\nclass AugsHolder {\r\n\r\n    constructor() {\r\n        this.debug = null;\r\n\r\n        this.breakpoints = {};\r\n        this.positions = {};\r\n    }\r\n\r\n    setDebug(debug) {\r\n        this.debug = debug;\r\n    }\r\n\r\n    executeAugs(pos, stack) {\r\n        let augs = this.breakpoints[pos.key];\r\n\r\n        if (!augs) {\r\n            logger.error(\"Aug not found! %s@%d\", pos.filename, pos.lineno)\r\n        } else {\r\n            for (let aug of augs) {\r\n                aug.execute(stack);\r\n            }\r\n        }\r\n    }\r\n\r\n    addAug(filename, lineno, column, aug) {\r\n        logger.info(\"Setting breakpoint at %s:%s:%s\", filename, lineno, column);\r\n\r\n        let pos = new Pos(canonizeFileName(filename), lineno, column);\r\n\r\n        if (this.breakpoints.hasOwnProperty(pos.key)) {\r\n            this.breakpoints[pos.key].push(aug);\r\n        } else {\r\n            this.debug.setBreak(pos);\r\n            this.breakpoints[pos.key]= [aug];\r\n        }\r\n\r\n        this.positions[aug.augId] = pos;\r\n        aug.setActive();\r\n    }\r\n\r\n    removeAugTemporarily(augId, duration) {\r\n        if (!this.positions.hasOwnProperty(augId)) {\r\n            return;\r\n        }\r\n\r\n        // We remove ALL breakpoints from that position\r\n        const pos = this.positions[augId];\r\n        this.debug.clearBreak(pos);\r\n\r\n        setTimeout(() => {\r\n            try {\r\n                // Check if we still have augs in that position after the timeout\r\n                const currentAugs = this.breakpoints[pos.key];\r\n                if (undefined === currentAugs || 0 === currentAugs.length) {\r\n                    return;\r\n                }\r\n\r\n                logger.info(\"Re-adding aug %s after %sms\", augId, duration);\r\n                this.debug.setBreak(pos);\r\n            } catch (e) {\r\n                try {\r\n                    const message = \"Exception when adding aug back\";\r\n                    logger.exception(message, e);\r\n                } catch (e) {\r\n                }\r\n            }\r\n        }, duration).uref();\r\n    }\r\n\r\n    removeAug(augId) {\r\n        if (!this.positions.hasOwnProperty(augId)) {\r\n            return;\r\n        }\r\n\r\n        // Get current augs in position\r\n        let pos = this.positions[augId];\r\n\r\n        let currentAugs = this.breakpoints[pos.key];\r\n\r\n        // Divide augs into delete and keep\r\n        let augsToKeep = [];\r\n        let augsToDelete = [];\r\n        for (let aug of currentAugs) {\r\n            if (aug.augId === augId) {\r\n                augsToDelete.push(aug);\r\n            } else {\r\n                augsToKeep.push(aug);\r\n            }\r\n        }\r\n\r\n        // Update list\r\n        if (augsToKeep.length > 0) {\r\n            this.breakpoints[pos.key] = augsToKeep;\r\n        } else {\r\n            this.debug.clearBreak(pos);\r\n            delete this.breakpoints[pos.key];\r\n        }\r\n\r\n        // Update status\r\n        for (let aug of augsToDelete) {\r\n            aug.setRemoved();\r\n        }\r\n\r\n        // Remove from position list\r\n        delete this.positions[augId];\r\n    }\r\n\r\n    async clearAugs() {\r\n        let augIds = Object.keys(this.positions);\r\n        for (let augId of augIds) {\r\n            this.removeAug(augId);\r\n        }\r\n\r\n        this.breakpoints = {};\r\n        this.positions = {};\r\n        await this.debug.clearAllBreaks();\r\n    }\r\n\r\n    isEmpty() {\r\n        return Object.keys(this.positions).length === 0;\r\n    }\r\n}\r\n\r\nexport class DebuggerService extends IService {\r\n\r\n    constructor() {\r\n        super();\r\n        this.debug = null;\r\n        this.augsHolder = null;\r\n        this.scriptNotifier = null;\r\n        this.closing = false;\r\n        this.permanently_closed = false;\r\n\r\n        this.closeTimeout = null;\r\n    }\r\n\r\n    async close(permanent=false) {\r\n        if (permanent) {\r\n            this.permanently_closed = true;\r\n        }\r\n\r\n        if (this.closing) {\r\n            return;\r\n        }\r\n        this.closing = true;\r\n\r\n        await this.clearAugs();\r\n\r\n        if (null !== this.debug) {\r\n            const debug = this.debug;\r\n            this.debug = null;\r\n            await debug.close();\r\n        }\r\n\r\n        this.closing = false;\r\n    }\r\n\r\n    addAug(matchInfo, aug) {\r\n        if (this.permanently_closed) {\r\n            aug.sendRuleStatus(\"Error\", new RookError(new RookDebuggerPermanentlyClosedException()));\r\n            return;\r\n        }\r\n\r\n        this.start();\r\n\r\n        // Note- this is a hack used to simplify testing, it creates a matchInfo for matchInfo === notification in tests,\r\n        // matchInfo should not hold lineUnique in production\r\n        if (matchInfo.lineUnique !== undefined) {\r\n            matchInfo = this.scriptNotifier.getAllMatchInfoByNotification(matchInfo)[0];\r\n            assert.notEqual(matchInfo, undefined, \"Script not found\");\r\n        }\r\n\r\n        this.augsHolder.addAug(matchInfo.script.filename, matchInfo.lineno, matchInfo.column, aug);\r\n    }\r\n\r\n    registerNotification(aug, filename, fileHash, includeExternals, lineno, lineCrc32, lineUnique, callback, removed) {\r\n        if (this.permanently_closed) {\r\n            aug.sendRuleStatus(\"Error\", new RookError(new RookDebuggerPermanentlyClosedException()));\r\n            return;\r\n        }\r\n\r\n        this.start();\r\n\r\n        this.scriptNotifier.registerNotification(aug, filename, fileHash, includeExternals, lineno, lineCrc32,\r\n            lineUnique, callback, removed);\r\n    }\r\n\r\n    removeAug(augId) {\r\n        if (null !== this.augsHolder) {\r\n            this.augsHolder.removeAug(augId);\r\n        }\r\n\r\n        if (null !== this.scriptNotifier) {\r\n            this.scriptNotifier.removeAug(augId);\r\n        }\r\n\r\n        this.closeIfNeeded();\r\n    }\r\n\r\n    removeAugTemporarily(augId, duration) {\r\n        this.augsHolder.removeAugTemporarily(augId, duration);\r\n    }\r\n\r\n    async clearAugs() {\r\n        if (null !== this.augsHolder) {\r\n            await this.augsHolder.clearAugs();\r\n        }\r\n\r\n        if (null !== this.scriptNotifier) {\r\n            this.scriptNotifier.clearAugs();\r\n        }\r\n\r\n        this.closeIfNeeded();\r\n    }\r\n\r\n    start() {\r\n        this.finalizeCloseTimeout();\r\n\r\n        if (null === this.debug) {\r\n\r\n            this.scriptNotifier = new ScriptNotifier();\r\n            this.augsHolder = new AugsHolder();\r\n            this.debug = this.getDebugger();\r\n            this.augsHolder.setDebug(this.debug)\r\n\r\n            if (config.HeapSnapshotConfiguration.HEAP_PATH !== null) {\r\n                logger.debug('registering signal ' + config.HeapSnapshotConfiguration.SIGNAL);\r\n                process.on(config.HeapSnapshotConfiguration.SIGNAL, () => {\r\n                    let date = new Date().toISOString();\r\n                    logger.info('Rook is saving a heap snapshot to: ' + config.HeapSnapshotConfiguration.HEAP_PATH);\r\n                    this.debug.heapDump(config.HeapSnapshotConfiguration.HEAP_PATH, '/rookout_' + date + '.heapsnapshot');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    closeIfNeeded() {\r\n        if (null !== this.closeTimeout || this.augsHolder === null || !this.augsHolder.isEmpty()) {\r\n            return;\r\n        }\r\n\r\n        this.closeTimeout = setTimeout(async () => {\r\n            try {\r\n                await this.close();\r\n                this.finalizeCloseTimeout();\r\n            } catch (error) {}\r\n        }, config.DebuggerService.WAIT_SECONDS_TO_CLOSE_DEBUGGER_AFTER_NO_AUGS * 1000).unref();\r\n    }\r\n\r\n    getDebugger() {\r\n        const versions = process.version.split('.');\r\n        const major = parseInt(versions[0].substr(1));\r\n        if (major < 8) {\r\n            throw new RookUnsupportedNodeVersion(process.version);\r\n        }\r\n\r\n        const InspectorDebug = require('./InspectorDebug');\r\n        return new InspectorDebug.InspectorDebug(\r\n            this.augsHolder.executeAugs.bind(this.augsHolder),\r\n            this.scriptNotifier.addScript.bind(this.scriptNotifier),\r\n            this.scriptNotifier.getScriptObjectById.bind(this.scriptNotifier),\r\n            this);\r\n    }\r\n\r\n    finalizeCloseTimeout() {\r\n        if (this.closeTimeout !== null) {\r\n            clearTimeout(this.closeTimeout);\r\n            this.closeTimeout = null;\r\n        }\r\n    }\r\n}\r\n"],"file":"DebuggerService.js"}