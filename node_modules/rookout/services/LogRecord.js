"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LogRecord = exports.LogModules = exports.LOG_RECORD_MESSAGE_FIELD_NAME = exports.LOG_RECORD_LEVEL_NAME_FIELD_NAME = void 0;
const LogModules = Object.freeze({
  CONSOLE: "CONSOLE",
  WINSTON2: "WINSTON2",
  WINSTON3: "WINSTON3"
});
exports.LogModules = LogModules;
const LOG_RECORD_MESSAGE_FIELD_NAME = "msg";
exports.LOG_RECORD_MESSAGE_FIELD_NAME = LOG_RECORD_MESSAGE_FIELD_NAME;
const LOG_RECORD_LEVEL_NAME_FIELD_NAME = "levelname";
exports.LOG_RECORD_LEVEL_NAME_FIELD_NAME = LOG_RECORD_LEVEL_NAME_FIELD_NAME;

class LogRecord {
  constructor(record, module) {
    this.unparsedLevelName = record.level;
    this.levelname = null;
    this.unparsedMessage = record.message;
    this.msg = null;
    this.time = record.created;
    this.module = module;
  }

  getLevelName() {
    this.formatLevelName();
    return this.levelname;
  }

  formatLevelName() {
    if (this.levelname === null) {
      this.levelname = this.unparsedLevelName.toUpperCase();
    }
  }

  getMessage() {
    if (this.msg === null) {
      this.formatMessage();
    }

    return this.msg;
  }

  formatMessage() {
    if (this.msg !== null) {
      return;
    }

    switch (this.module) {
      case LogModules.CONSOLE:
        this.msg = this.getFormattedConsoleLogMessage(this.unparsedMessage);
        break;

      case LogModules.WINSTON2:
      case LogModules.WINSTON3:
        this.msg = this.getFormattedWinstonLogMessage(this.unparsedMessage);
        break;

      default:
        break;
    }
  }

  getFormattedConsoleLogMessage(message) {
    return message.map(obj => {
      if (typeof obj === "object") {
        if (obj.constructor.name !== "Object") {
          return `${obj.constructor.name} ${JSON.stringify(obj)}`;
        }

        return JSON.stringify(obj);
      }

      return obj;
    }).join(" ");
  }

  getFormattedWinstonLogMessage(message) {
    return message;
  }

}

exports.LogRecord = LogRecord;
//# sourceMappingURL=LogRecord.js.map