{"version":3,"sources":["../../../src/services/LoggingService.js"],"names":["config","require","rookoutTransportName","transportNameInUpperCase","charAt","toUpperCase","slice","LoggingService","IService","constructor","augs","start","winston","Transport","isWinston3","version","startsWith","isWinston2","originalCreateLogger","createLogger","undefined","toString","split","includes","opts","transports","addRookoutWinstonTransportToTransports","logger","info","error","func","originalLoggerConfigure","Logger","prototype","configure","callAddRookoutTransportToTransports","options","apply","originalAddLogger","loggers","add","length","id","defaultContainer","RookoutWinston3Transport","getRookoutWinston3TransportClass","forEach","loggerInstance","RookoutWinston2Transport","getRookoutWinston2TransportClass","key","Object","entries","defaultLogger","default","hookConsoleLogFunctionsIfDefined","existingTransports","RookoutWinstonTransport","newTransport","Array","isArray","some","transport","onNewLog","LogModules","WINSTON3","level","log","callback","setImmediate","emit","created","Date","now","WINSTON2","name","message","meta","LogHandlerService","CONSOLE_FUNCTIONS_HOOK_ENABLED","console","hookConsoleLogFunctions","debug","hookConsoleLogFunction","hookConsoleDebugFunction","hookConsoleInfoFunction","hookConsoleWarnFunction","hookConsoleErrorFunction","hookConsoleTraceFunction","originalConsoleLog","args","CONSOLE","originalConsoleDebug","originalConsoleInfo","originalConsoleWarn","warn","originalConsoleError","originalConsoleTrace","trace","addLoggingAug","aug","augId","setActive","removeAug","clearAugs","executeAugs","record","extracted","ContainerNamespace","LogRecordNamespace","values","execute","module","keys","LogRecord"],"mappings":"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","sourcesContent":["import ContainerNamespace from \"../processor/namespaces/ContainerNamespace\";\nimport LogRecordNamespace from \"../processor/namespaces/LogRecordNamespace\";\nimport {logger} from \"../logger\";\nimport {IService} from \"./IService\";\nimport {LogModules, LogRecord} from \"./LogRecord\";\nimport { conditionalRequire } from \"../utils\";\nconst config = require(\"../config\");\n\nconst rookoutTransportName = 'rookoutTransport';\nconst transportNameInUpperCase = rookoutTransportName.charAt(0).toUpperCase() + rookoutTransportName.slice(1);\n\nexport class LoggingService extends IService {\n\n    constructor() {\n        super();\n        this.augs = {};\n    }\n\n    start() {\n        // if winston isn't installed this will throw an exception which will be caught by TriggerServices which will skip the service.\n        const winston = conditionalRequire('winston');\n        let Transport;\n        if (winston) {\n            Transport = winston.Transport || conditionalRequire('winston-transport');\n        }\n\n        if (winston && Transport) {\n            const isWinston3 = winston.version.startsWith(\"3.\");\n            const isWinston2 = winston.version.startsWith(\"2.\");\n\n            if (isWinston3) {\n                // override winston.createLogger(). the logger creator for winston 3.*\n                const originalCreateLogger = winston.createLogger;\n                if (originalCreateLogger !== undefined) {\n                    if (originalCreateLogger.toString().split('\\n')[0].includes(\"(opts = {})\")) {\n                        winston.createLogger = (opts = {}) => {\n                            opts.transports = this.addRookoutWinstonTransportToTransports(opts.transports, isWinston3);\n                            return originalCreateLogger(opts);\n                        }\n                        logger.info(\"Hooked winston.createLogger\");\n                    } else {\n                        logger.error(\"did not override winston.createLogger() because of unexpected args\", {func: winston.createLogger.toString()});\n                    }\n                } else {\n                    logger.info(\"Skipped winston.createdLogger (missing)\");\n                }\n            }\n\n            if (isWinston2) {\n                // override the configure prototype which is called from the constructor, constructor is overrun by inheritence. this is winston 2.* specific\n                const originalLoggerConfigure = winston.Logger.prototype.configure;\n                if (originalLoggerConfigure !== undefined) {\n                    if (originalLoggerConfigure.toString().split('\\n')[0].includes(\"(options)\")) {\n                        const callAddRookoutTransportToTransports = transports => this.addRookoutWinstonTransportToTransports(transports, isWinston3);\n                        winston.Logger.prototype.configure = function (options) {\n                            options.transports = callAddRookoutTransportToTransports(options.transports);\n                            return originalLoggerConfigure.apply(this,[options]);\n                        }\n                        logger.info(\"Hooked winston.Logger.prototype.configure\");\n                    } else {\n                        logger.error(\"did not override winston.Logger.prototype.configure() constructor because of unexpected args\", {func: winston.Logger.prototype.configure.toString()});\n                    }\n                } else {\n                    logger.info(\"Skipped winston.Logger.prototype.configure (missing)\");\n                }\n            }\n\n            if (isWinston3) {\n                // override winston.loggers.add() for winston 3. winston 2.* doesn't need monkey patching for loggers.add()\n                // because it uses the Logger constructor we have already patched.\n                const originalAddLogger = winston.loggers.add;\n                if (originalAddLogger.length === 2) {\n                    const callAddRookoutTransportToTransports = options => this.addRookoutWinstonTransportToTransports(options.transports, isWinston3);\n                    winston.loggers.add = function (id, options = {}) {\n                        options.transports = callAddRookoutTransportToTransports(options);\n                        return originalAddLogger.apply(this, [id, options]);\n                    }\n                    logger.info(\"Hooked winston.loggers.add()\");\n                } else {\n                    logger.error(\"did not override winston.loggers.add() because of unexpected args\", {func: winston.loggers.add.toString()});\n                }\n            }\n\n            // add Rookout logging transport to existing loggers in the default container\n            const defaultContainer = winston.loggers;\n            if (defaultContainer !== undefined) {\n                const loggers = defaultContainer.loggers;\n                if (loggers) {\n                    if (isWinston3) {\n                        // winston 3.*\n                        const RookoutWinston3Transport = this.getRookoutWinston3TransportClass();\n                        if (RookoutWinston3Transport) {\n                            loggers.forEach(loggerInstance => {\n                                loggerInstance.add(new RookoutWinston3Transport({}));\n                            })\n                            logger.info(\"added Rookout transport to winston 3.* default container loggers\");\n                        }\n                    } else if (isWinston2) {\n                        // winston 2.*\n                        const RookoutWinston2Transport = this.getRookoutWinston2TransportClass();\n                        winston.transports[transportNameInUpperCase] = RookoutWinston2Transport;\n                        if (RookoutWinston2Transport) {\n                            for (const [key, loggerInstance] of Object.entries(loggers)) {\n                                loggerInstance.add(RookoutWinston2Transport, {});\n                            }\n                            logger.info(\"added Rookout transport to winston 2.* default container loggers\");\n                        }\n                    }\n                }\n            }\n\n            // add Rookout logging transport to winston default logger. `winston.info(\"log message\")`\n            const defaultLogger = winston.default;\n            if (defaultLogger !== undefined) {\n                if (isWinston3) {\n                    const RookoutWinston3Transport = this.getRookoutWinston3TransportClass();\n                    if (RookoutWinston3Transport) {\n                        winston.add(new RookoutWinston3Transport({}));\n                        logger.info(\"added Rookout transport to winston 3.* default logger\");\n                    }\n                } else if (isWinston2) {\n                    const RookoutWinston2Transport = this.getRookoutWinston2TransportClass();\n                    // in winston 2.* it's required to add our transport to the list of valid transports\n                    winston.transports[transportNameInUpperCase] = RookoutWinston2Transport;\n                    if (RookoutWinston2Transport) {\n                        winston.add(RookoutWinston2Transport, {})\n                        logger.info(\"added Rookout transport to winston 2.* default logger\");\n                    }\n                }\n            }\n\n            // todo: loggers created by winston.createLogger() before rookout init and weren't saved into a container. (winston 3.*)\n            // example:\n            //   const logger = winston.createLogger();\n            //   rookout.start();\n            //   logger.info('hello world');\n\n            // todo: loggers created by new winston.Logger() before rookout init and weren't saved into a container. (winston 2.*)\n            // example:\n            //   const logger = new winston.Logger();\n            //   rookout.start();\n            //   logger.info('hello world');\n\n            // todo: loggers created inside manual containers before rookout init.\n            // example:\n            //   const container = new winston.Container();\n            //   container.add('logger-id', opts);\n            //   rookout.start();\n            //   const logger = conainer.get('logger-id');\n            //   logger.info('hello world');\n\n            this.hookConsoleLogFunctionsIfDefined();\n        }\n    }\n\n    addRookoutWinstonTransportToTransports(existingTransports, isWinston3) {\n        const RookoutWinstonTransport = isWinston3 ? this.getRookoutWinston3TransportClass() : this.getRookoutWinston2TransportClass();\n        if (!isWinston3) {\n            // in winston 2.* it's required to add our transport to the list of valid transports\n            const winston = conditionalRequire('winston');\n            winston.transports[transportNameInUpperCase] = RookoutWinstonTransport;\n        }\n        if (RookoutWinstonTransport) {\n            const newTransport = new RookoutWinstonTransport({});\n            if (Array.isArray(existingTransports)) {\n                if (existingTransports.some(transport => transport instanceof RookoutWinstonTransport)) {\n                    return existingTransports;\n                }\n                return [newTransport, ...existingTransports];\n            } else if (existingTransports) {\n                if (existingTransports instanceof RookoutWinstonTransport) {\n                    return existingTransports;\n                }\n                return [newTransport, existingTransports];\n            } else {\n                return [newTransport];\n            }\n        }\n        return existingTransports;\n    }\n\n    getRookoutWinston3TransportClass() {\n        const winston = conditionalRequire('winston');\n        const Transport = conditionalRequire('winston-transport');\n        if (winston && Transport) {\n            const onNewLog = info => this.onNewLog(this.augs, info, LogModules.WINSTON3);\n            if (Transport) {\n                return class RookoutWinston3Transport extends Transport {\n                    constructor(opts) {\n                        opts.level = 'debug';\n                        super(opts);\n                    }\n\n                    log(info, callback) {\n                        setImmediate(() => {\n                            this.emit('logged', info);\n                        });\n\n                        info.created = Date.now() / 1000;\n                        onNewLog(info);\n\n                        callback();\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    getRookoutWinston2TransportClass() {\n        const winston = conditionalRequire('winston');\n        if (winston) {\n            const Transport = winston.Transport;\n            if (Transport) {\n                const onNewLog = info => this.onNewLog(this.augs, info, LogModules.WINSTON2);\n                if (Transport) {\n                    return class RookoutWinston2Transport extends Transport {\n                        constructor(opts) {\n                            opts.name = rookoutTransportName;\n                            opts.level = 'debug';\n                            super(opts);\n                        }\n\n                        log(level, message, meta, callback) {\n                            setImmediate(() => {\n                                this.emit('logged', message);\n                            });\n\n                            const info = {\n                                message,\n                                level,\n                                created: Date.now() / 1000\n                            };\n\n                            onNewLog(info);\n\n                            callback();\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    hookConsoleLogFunctionsIfDefined() {\n        if (config.LogHandlerService.CONSOLE_FUNCTIONS_HOOK_ENABLED !== false && typeof console !== \"undefined\") {\n            this.hookConsoleLogFunctions();\n            logger.debug('Successfully hooked console.log');\n        }\n    }\n\n    hookConsoleLogFunctions() {\n        this.hookConsoleLogFunction();\n        this.hookConsoleDebugFunction();\n        this.hookConsoleInfoFunction();\n        this.hookConsoleWarnFunction();\n        this.hookConsoleErrorFunction();\n        this.hookConsoleTraceFunction();\n    }\n\n    hookConsoleLogFunction() {\n        const originalConsoleLog = console.log;\n        console.log = (...args) => {\n            this.onNewLog(this.augs, {\n                message: args,\n                level: \"LOG\",\n                created: Date.now() / 1000}, LogModules.CONSOLE);\n            originalConsoleLog(...args);\n        }\n    }\n\n    hookConsoleDebugFunction() {\n        const originalConsoleDebug = console.debug;\n        console.debug = (...args) => {\n            this.onNewLog(this.augs, {\n                message: args,\n                level: \"DEBUG\",\n                created: Date.now() / 1000}, LogModules.CONSOLE);\n            originalConsoleDebug(...args);\n        }\n    }\n\n    hookConsoleInfoFunction() {\n        const originalConsoleInfo = console.info;\n        console.info = (...args) => {\n            this.onNewLog(this.augs, {\n                message: args,\n                level: \"INFO\",\n                created: Date.now() / 1000}, LogModules.CONSOLE);\n            originalConsoleInfo(...args);\n        }\n    }\n\n    hookConsoleWarnFunction() {\n        const originalConsoleWarn = console.warn;\n        console.warn = (...args) => {\n            this.onNewLog(this.augs, {\n                message: args,\n                level: \"WARN\",\n                created: Date.now() / 1000}, LogModules.CONSOLE);\n            originalConsoleWarn(...args);\n        }\n    }\n\n    hookConsoleErrorFunction() {\n        const originalConsoleError = console.error;\n        console.error = (...args) => {\n            this.onNewLog(this.augs, {\n                message: args,\n                level: \"ERROR\",\n                created: Date.now() / 1000}, LogModules.CONSOLE);\n            originalConsoleError(...args);\n        }\n    }\n\n    hookConsoleTraceFunction() {\n        const originalConsoleTrace = console.trace;\n        console.trace = (...args) => {\n            this.onNewLog(this.augs, {\n                message: args,\n                level: \"TRACE\",\n                created: Date.now() / 1000}, LogModules.CONSOLE);\n            originalConsoleTrace(...args);\n        }\n    }\n\n    addLoggingAug(aug) {\n        logger.debug('Adding Logging Aug, ' + aug.augId);\n        this.augs[aug.augId] = aug;\n        aug.setActive();\n    }\n\n    removeAug(augId) {\n        logger.debug('Removing Logging Aug, ' + augId);\n        delete this.augs[augId];\n    }\n\n    clearAugs() {\n        this.augs = {};\n    }\n\n    executeAugs(record) {\n        const extracted = new ContainerNamespace({ 'log_record': new LogRecordNamespace(record) });\n        for (const aug of Object.values(this.augs)) {\n            aug.execute(null, extracted);\n        }\n    }\n\n    onNewLog(augs, record, module) {\n        if (Object.keys(augs).length > 0) {\n            this.executeAugs(new LogRecord(record, module));\n        }\n    }\n}\n"],"file":"LoggingService.js"}